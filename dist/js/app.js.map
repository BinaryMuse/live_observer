{
  "version": 3,
  "sources": ["../../deps/phoenix/assets/js/phoenix/utils.js", "../../deps/phoenix/assets/js/phoenix/constants.js", "../../deps/phoenix/assets/js/phoenix/push.js", "../../deps/phoenix/assets/js/phoenix/timer.js", "../../deps/phoenix/assets/js/phoenix/channel.js", "../../deps/phoenix/assets/js/phoenix/ajax.js", "../../deps/phoenix/assets/js/phoenix/longpoll.js", "../../deps/phoenix/assets/js/phoenix/presence.js", "../../deps/phoenix/assets/js/phoenix/serializer.js", "../../deps/phoenix/assets/js/phoenix/socket.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/constants.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/entry_uploader.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/utils.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/browser.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/aria.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/js.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/dom.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/upload_entry.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/live_uploader.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/hooks.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/element_ref.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../../deps/phoenix_live_view/assets/node_modules/morphdom/dist/morphdom-esm.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/dom_patch.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/rendered.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/view_hook.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/view.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/live_socket.js", "../../deps/phoenix_live_view/assets/js/phoenix_live_view/index.js", "../../assets/js/app.js"],
  "sourcesContent": ["// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || global\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nlet arrayBufferToBase64 = (buffer) => {\n  let binary = \"\"\n  let bytes = new Uint8Array(buffer)\n  let len = bytes.byteLength\n  for(let i = 0; i < len; i++){ binary += String.fromCharCode(bytes[i]) }\n  return btoa(binary)\n}\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.awaitingBatchAck = false\n    this.currentBatch = null\n    this.currentBatchTimer = null\n    this.batchBuffer = []\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    // we must wait for the caller to finish setting up our callbacks and timeout properties\n    setTimeout(() => this.poll(), 0)\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(code, reason, wasClean){\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry(1005, \"timeout\", false)\n  }\n\n  isActive(){ return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting }\n\n  poll(){\n    this.ajax(\"GET\", \"application/json\", null, () => this.ontimeout(), resp => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within its own macrotask.\n            setTimeout(() => this.onmessage({data: msg}), 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen({})\n          this.poll()\n          break\n        case 403:\n          this.onerror(403)\n          this.close(1008, \"forbidden\", false)\n          break\n        case 0:\n        case 500:\n          this.onerror(500)\n          this.closeAndRetry(1011, \"internal server error\", 500)\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  // we collect all pushes within the current event loop by\n  // setTimeout 0, which optimizes back-to-back procedural\n  // pushes against an empty buffer\n\n  send(body){\n    if(typeof(body) !== \"string\"){ body = arrayBufferToBase64(body) }\n    if(this.currentBatch){\n      this.currentBatch.push(body)\n    } else if(this.awaitingBatchAck){\n      this.batchBuffer.push(body)\n    } else {\n      this.currentBatch = [body]\n      this.currentBatchTimer = setTimeout(() => {\n        this.batchSend(this.currentBatch)\n        this.currentBatch = null\n      }, 0)\n    }\n  }\n\n  batchSend(messages){\n    this.awaitingBatchAck = true\n    this.ajax(\"POST\", \"application/x-ndjson\", messages.join(\"\\n\"), () => this.onerror(\"timeout\"), resp => {\n      this.awaitingBatchAck = false\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry(1011, \"internal server error\", false)\n      } else if(this.batchBuffer.length > 0){\n        this.batchSend(this.batchBuffer)\n        this.batchBuffer = []\n      }\n    })\n  }\n\n  close(code, reason, wasClean){\n    for(let req of this.reqs){ req.abort() }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign({code: 1000, reason: undefined, wasClean: true}, {code, reason, wasClean})\n    this.batchBuffer = []\n    clearTimeout(this.currentBatchTimer)\n    this.currentBatchTimer = null\n    if(typeof(CloseEvent) !== \"undefined\"){\n      this.onclose(new CloseEvent(\"close\", opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, contentType, body, onCallerTimeout, callback){\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(method, this.endpointURL(), contentType, body, this.timeout, ontimeout, resp => {\n      this.reqs.delete(req)\n      if(this.isActive()){ callback(resp) }\n    })\n    this.reqs.add(req)\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback if WebSocket is not defined.\n * To fallback to LongPoll when WebSocket attempts fail, use `longPollFallbackMs: 2500`.\n *\n * @param {Function} [opts.longPollFallbackMs] - The millisecond time to attempt the primary transport\n * before falling back to the LongPoll transport. Disabled by default.\n *\n * @param {Function} [opts.debug] - When true, enables debug logging. Default false.\n *\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millisec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millisec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n *\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Phoenix uses sessionStorage for longpoll fallback history. Overriding the store is\n * useful when Phoenix won't have access to `sessionStorage`. For example, This could\n * happen if a site loads a cross-domain channel in an iframe. Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.primaryPassedHealthCheck = false\n    this.longPollFallbackMs = opts.longPollFallbackMs\n    this.fallbackTimer = null\n    this.sessionStore = opts.sessionStorage || (global && global.sessionStorage)\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    if(!this.logger && opts.debug){\n      this.logger = (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n    }\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimeoutTimer = null\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport(){ return LongPoll }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    if(this.conn){\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualified socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    this.teardown(callback, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn){ return }\n    if(this.longPollFallbackMs && this.transport !== LongPoll){\n      this.connectWithFallback(LongPoll, this.longPollFallbackMs)\n    } else {\n      this.transportConnect()\n    }\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger && this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback){\n    if(!this.isConnected()){ return false }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: ref})\n    let onMsgRef = this.onMessage(msg => {\n      if(msg.ref === ref){\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n\n  transportConnect(){\n    this.connectClock++\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  getSession(key){ return this.sessionStore && this.sessionStore.getItem(key) }\n\n  storeSession(key, val){ this.sessionStore && this.sessionStore.setItem(key, val) }\n\n  connectWithFallback(fallbackTransport, fallbackThreshold = 2500){\n    clearTimeout(this.fallbackTimer)\n    let established = false\n    let primaryTransport = true\n    let openRef, errorRef\n    let fallback = (reason) => {\n      this.log(\"transport\", `falling back to ${fallbackTransport.name}...`, reason)\n      this.off([openRef, errorRef])\n      primaryTransport = false\n      this.replaceTransport(fallbackTransport)\n      this.transportConnect()\n    }\n    if(this.getSession(`phx:fallback:${fallbackTransport.name}`)){ return fallback(\"memorized\") }\n\n    this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n\n    errorRef = this.onError(reason => {\n      this.log(\"transport\", \"error\", reason)\n      if(primaryTransport && !established){\n        clearTimeout(this.fallbackTimer)\n        fallback(reason)\n      }\n    })\n    this.onOpen(() => {\n      established = true\n      if(!primaryTransport){\n        // only memorize LP if we never connected to primary\n        if(!this.primaryPassedHealthCheck){ this.storeSession(`phx:fallback:${fallbackTransport.name}`, \"true\") }\n        return this.log(\"transport\", `established ${fallbackTransport.name} fallback`)\n      }\n      // if we've established primary, give the fallback a new period to attempt ping\n      clearTimeout(this.fallbackTimer)\n      this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n      this.ping(rtt => {\n        this.log(\"transport\", \"connected to primary after\", rtt)\n        this.primaryPassedHealthCheck = true\n        clearTimeout(this.fallbackTimer)\n      })\n    })\n    this.transportConnect()\n  }\n\n  clearHeartbeats(){\n    clearTimeout(this.heartbeatTimer)\n    clearTimeout(this.heartbeatTimeoutTimer)\n  }\n\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `${this.transport.name} connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.triggerChanError()\n      this.closeWasClean = false\n      this.teardown(() => this.reconnectTimer.scheduleTimeout(), WS_CLOSE_NORMAL, \"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    this.clearHeartbeats()\n    this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n\n    this.waitForBufferDone(() => {\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(this.conn){\n          this.conn.onopen = function (){ } // noop\n          this.conn.onerror = function (){ } // noop\n          this.conn.onmessage = function (){ } // noop\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    this.clearHeartbeats()\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c !== channel)\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimeoutTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        this.clearHeartbeats()\n        this.pendingHeartbeatRef = null\n        this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "export const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER_MIN = 5000\nexport const RELOAD_JITTER_MAX = 10000\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\",\n  \"phx-hook-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF_LOADING = \"data-phx-ref-loading\"\nexport const PHX_REF_SRC = \"data-phx-ref-src\"\nexport const PHX_REF_LOCK = \"data-phx-ref-lock\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_MAGIC_ID = \"data-phx-id\"\nexport const PHX_PRUNE = \"data-phx-prune\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_LOADING_CLASS = \"phx-loading\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_CLIENT_ERROR_CLASS = \"phx-client-error\"\nexport const PHX_SERVER_ERROR_CLASS = \"phx-server-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_VIEWPORT_TOP = \"viewport-top\"\nexport const PHX_VIEWPORT_BOTTOM = \"viewport-bottom\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\", \"datetime-local\", \"color\", \"range\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STICKY = \"data-phx-sticky\"\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_STREAM = \"stream\"\nexport const PHX_STREAM_REF = \"data-phx-stream\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const PHX_MOUNTED = \"mounted\"\nexport const PHX_RELOAD_STATUS = \"__phoenix_reload_status__\"\nexport const LOADER_TIMEOUT = 1\nexport const MAX_CHILD_JOIN_ATTEMPTS = 3\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\nexport const PHX_PENDING_ATTRS = [PHX_REF_LOADING, PHX_REF_SRC, PHX_REF_LOCK]\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const ROOT = \"r\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\nexport const TEMPLATES = \"p\"\nexport const STREAM = \"stream\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.errored = false\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    if(this.errored){ return }\n    this.uploadChannel.leave()\n    this.errored = true\n    clearTimeout(this.chunkTimer)\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n      .receive(\"error\", ({reason}) => this.error(reason))\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => {\n  let type = typeof(cid)\n  return type === \"number\" || (type === \"string\" && /^(0|[1-9]\\d*)$/.test(cid))\n}\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`) && !el.disabled){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n\n        // when using navigate, we'd call pushState immediately before patching the DOM,\n        // jumping back to the top of the page, effectively ignoring the scrollIntoView;\n        // therefore we wait for the next frame (after the DOM patch) and only then try\n        // to scroll to the hashEl\n        window.requestAnimationFrame(() => {\n          let hashEl = this.getHashTargetEl(window.location.hash)\n  \n          if(hashEl){\n            hashEl.scrollIntoView()\n          } else if(meta.type === \"redirect\"){\n            window.scroll(0, 0)\n          }\n        })\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value, maxAgeSeconds){\n    let expires = typeof(maxAgeSeconds) === \"number\" ? ` max-age=${maxAgeSeconds};` : \"\"\n    document.cookie = `${name}=${value};${expires} path=/`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  deleteCookie(name){\n    document.cookie = `${name}=; max-age=-1; path=/`\n  },\n\n  redirect(toURL, flash){\n    if(flash){ this.setCookie(\"__phoenix_flash__\", flash, 60) }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "let ARIA = {\n  anyOf(instance, classes){ return classes.find(name => instance instanceof name) },\n\n  isFocusable(el, interactiveOnly){\n    return(\n      (el instanceof HTMLAnchorElement && el.rel !== \"ignore\") ||\n      (el instanceof HTMLAreaElement && el.href !== undefined) ||\n      (!el.disabled && (this.anyOf(el, [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLButtonElement]))) ||\n      (el instanceof HTMLIFrameElement) ||\n      (el.tabIndex > 0 || (!interactiveOnly && el.getAttribute(\"tabindex\") !== null && el.getAttribute(\"aria-hidden\") !== \"true\"))\n    )\n  },\n\n  attemptFocus(el, interactiveOnly){\n    if(this.isFocusable(el, interactiveOnly)){ try{ el.focus() } catch(e){} }\n    return !!document.activeElement && document.activeElement.isSameNode(el)\n  },\n\n  focusFirstInteractive(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child, true) || this.focusFirstInteractive(child, true)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusFirst(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusFirst(child)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusLast(el){\n    let child = el.lastElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusLast(child)){\n        return true\n      }\n      child = child.previousElementSibling\n    }\n  }\n}\nexport default ARIA\n", "import DOM from \"./dom\"\nimport ARIA from \"./aria\"\n\nlet focusStack = []\nlet default_transition_time = 200\n\nlet JS = {\n  // private\n  exec(e, eventType, phxEvent, view, sourceEl, defaults){\n    let [defaultKind, defaultArgs] = defaults || [null, {callback: defaults && defaults.callback}]\n    let commands = phxEvent.charAt(0) === \"[\" ?\n      JSON.parse(phxEvent) : [[defaultKind, defaultArgs]]\n\n    commands.forEach(([kind, args]) => {\n      if(kind === defaultKind && defaultArgs.data){\n        args.data = Object.assign(args.data || {}, defaultArgs.data)\n        args.callback = args.callback || defaultArgs.callback\n      }\n      this.filterToEls(view.liveSocket, sourceEl, args).forEach(el => {\n        this[`exec_${kind}`](e, eventType, phxEvent, view, sourceEl, el, args)\n      })\n    })\n  },\n\n  isVisible(el){\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length > 0)\n  },\n\n  // returns true if any part of the element is inside the viewport\n  isInViewport(el){\n    const rect = el.getBoundingClientRect()\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth\n\n    return (\n      rect.right > 0 &&\n      rect.bottom > 0 &&\n      rect.left < windowWidth &&\n      rect.top < windowHeight\n    )\n  },\n\n  // private\n\n  // commands\n\n  exec_exec(e, eventType, phxEvent, view, sourceEl, el, {attr, to}){\n    let nodes = to ? DOM.all(document, to) : [sourceEl]\n    nodes.forEach(node => {\n      let encodedJS = node.getAttribute(attr)\n      if(!encodedJS){ throw new Error(`expected ${attr} to contain JS command on \"${to}\"`) }\n      view.liveSocket.execJS(node, encodedJS, eventType)\n    })\n  },\n\n  exec_dispatch(e, eventType, phxEvent, view, sourceEl, el, {to, event, detail, bubbles}){\n    detail = detail || {}\n    detail.dispatcher = sourceEl\n    DOM.dispatchEvent(el, event, {detail, bubbles})\n  },\n\n  exec_push(e, eventType, phxEvent, view, sourceEl, el, args){\n    let {event, data, target, page_loading, loading, value, dispatcher, callback} = args\n    let pushOpts = {loading, value, target, page_loading: !!page_loading}\n    let targetSrc = eventType === \"change\" && dispatcher ? dispatcher : sourceEl\n    let phxTarget = target || targetSrc.getAttribute(view.binding(\"target\")) || targetSrc\n    view.withinTargets(phxTarget, (targetView, targetCtx) => {\n      if(!targetView.isConnected()){ return }\n      if(eventType === \"change\"){\n        let {newCid, _target} = args\n        _target = _target || (DOM.isFormInput(sourceEl) ? sourceEl.name : undefined)\n        if(_target){ pushOpts._target = _target }\n        targetView.pushInput(sourceEl, targetCtx, newCid, event || phxEvent, pushOpts, callback)\n      } else if(eventType === \"submit\"){\n        let {submitter} = args\n        targetView.submitForm(sourceEl, targetCtx, event || phxEvent, submitter, pushOpts, callback)\n      } else {\n        targetView.pushEvent(eventType, sourceEl, targetCtx, event || phxEvent, data, pushOpts, callback)\n      }\n    })\n  },\n\n  exec_navigate(e, eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.historyRedirect(e, href, replace ? \"replace\" : \"push\", null, sourceEl)\n  },\n\n  exec_patch(e, eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.pushHistoryPatch(e, href, replace ? \"replace\" : \"push\", sourceEl)\n  },\n\n  exec_focus(e, eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => ARIA.attemptFocus(el))\n  },\n\n  exec_focus_first(e, eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => ARIA.focusFirstInteractive(el) || ARIA.focusFirst(el))\n  },\n\n  exec_push_focus(e, eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => focusStack.push(el || sourceEl))\n  },\n\n  exec_pop_focus(e, eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => {\n      const el = focusStack.pop()\n      if(el){ el.focus() }\n    })\n  },\n\n  exec_add_class(e, eventType, phxEvent, view, sourceEl, el, {names, transition, time, blocking}){\n    this.addOrRemoveClasses(el, names, [], transition, time, view, blocking)\n  },\n\n  exec_remove_class(e, eventType, phxEvent, view, sourceEl, el, {names, transition, time, blocking}){\n    this.addOrRemoveClasses(el, [], names, transition, time, view, blocking)\n  },\n\n  exec_toggle_class(e, eventType, phxEvent, view, sourceEl, el, {to, names, transition, time, blocking}){\n    this.toggleClasses(el, names, transition, time, view, blocking)\n  },\n\n  exec_toggle_attr(e, eventType, phxEvent, view, sourceEl, el, {attr: [attr, val1, val2]}){\n    this.toggleAttr(el, attr, val1, val2)\n  },\n\n  exec_transition(e, eventType, phxEvent, view, sourceEl, el, {time, transition, blocking}){\n    this.addOrRemoveClasses(el, [], [], transition, time, view, blocking)\n  },\n\n  exec_toggle(e, eventType, phxEvent, view, sourceEl, el, {display, ins, outs, time, blocking}){\n    this.toggle(eventType, view, el, display, ins, outs, time, blocking)\n  },\n\n  exec_show(e, eventType, phxEvent, view, sourceEl, el, {display, transition, time, blocking}){\n    this.show(eventType, view, el, display, transition, time, blocking)\n  },\n\n  exec_hide(e, eventType, phxEvent, view, sourceEl, el, {display, transition, time, blocking}){\n    this.hide(eventType, view, el, display, transition, time, blocking)\n  },\n\n  exec_set_attr(e, eventType, phxEvent, view, sourceEl, el, {attr: [attr, val]}){\n    this.setOrRemoveAttrs(el, [[attr, val]], [])\n  },\n\n  exec_remove_attr(e, eventType, phxEvent, view, sourceEl, el, {attr}){\n    this.setOrRemoveAttrs(el, [], [attr])\n  },\n\n  // utils for commands\n\n  show(eventType, view, el, display, transition, time, blocking){\n    if(!this.isVisible(el)){\n      this.toggle(eventType, view, el, display, transition, null, time, blocking)\n    }\n  },\n\n  hide(eventType, view, el, display, transition, time, blocking){\n    if(this.isVisible(el)){\n      this.toggle(eventType, view, el, display, null, transition, time, blocking)\n    }\n  },\n\n  toggle(eventType, view, el, display, ins, outs, time, blocking){\n    time = time || default_transition_time\n    let [inClasses, inStartClasses, inEndClasses] = ins || [[], [], []]\n    let [outClasses, outStartClasses, outEndClasses] = outs || [[], [], []]\n    if(inClasses.length > 0 || outClasses.length > 0){\n      if(this.isVisible(el)){\n        let onStart = () => {\n          this.addOrRemoveClasses(el, outStartClasses, inClasses.concat(inStartClasses).concat(inEndClasses))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, outClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, outEndClasses, outStartClasses))\n          })\n        }\n        let onEnd = () => {\n          this.addOrRemoveClasses(el, [], outClasses.concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        }\n        el.dispatchEvent(new Event(\"phx:hide-start\"))\n        if(blocking === false){\n          onStart()\n          setTimeout(onEnd, time)\n        } else {\n          view.transition(time, onStart, onEnd)\n        }\n      } else {\n        if(eventType === \"remove\"){ return }\n        let onStart = () => {\n          this.addOrRemoveClasses(el, inStartClasses, outClasses.concat(outStartClasses).concat(outEndClasses))\n          let stickyDisplay = display || this.defaultDisplay(el)\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = stickyDisplay)\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, inClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, inEndClasses, inStartClasses))\n          })\n        }\n        let onEnd = () => {\n          this.addOrRemoveClasses(el, [], inClasses.concat(inEndClasses))\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        }\n        el.dispatchEvent(new Event(\"phx:show-start\"))\n        if(blocking === false){\n          onStart()\n          setTimeout(onEnd, time)\n        } else {\n          view.transition(time, onStart, onEnd)\n        }\n      }\n    } else {\n      if(this.isVisible(el)){\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:hide-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:show-start\"))\n          let stickyDisplay = display || this.defaultDisplay(el)\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = stickyDisplay)\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    }\n  },\n\n  toggleClasses(el, classes, transition, time, view, blocking){\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let newAdds = classes.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let newRemoves = classes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      this.addOrRemoveClasses(el, newAdds, newRemoves, transition, time, view, blocking)\n    })\n  },\n\n  toggleAttr(el, attr, val1, val2){\n    if(el.hasAttribute(attr)){\n      if(val2 !== undefined){\n        // toggle between val1 and val2\n        if(el.getAttribute(attr) === val1){\n          this.setOrRemoveAttrs(el, [[attr, val2]], [])\n        } else {\n          this.setOrRemoveAttrs(el, [[attr, val1]], [])\n        }\n      } else {\n        // remove attr\n        this.setOrRemoveAttrs(el, [], [attr])\n      }\n    } else {\n      this.setOrRemoveAttrs(el, [[attr, val1]], [])\n    }\n  },\n\n  addOrRemoveClasses(el, adds, removes, transition, time, view, blocking){\n    time = time || default_transition_time\n    let [transitionRun, transitionStart, transitionEnd] = transition || [[], [], []]\n    if(transitionRun.length > 0){\n      let onStart = () => {\n        this.addOrRemoveClasses(el, transitionStart, [].concat(transitionRun).concat(transitionEnd))\n        window.requestAnimationFrame(() => {\n          this.addOrRemoveClasses(el, transitionRun, [])\n          window.requestAnimationFrame(() => this.addOrRemoveClasses(el, transitionEnd, transitionStart))\n        })\n      }\n      let onDone = () => this.addOrRemoveClasses(el, adds.concat(transitionEnd), removes.concat(transitionRun).concat(transitionStart))\n      if(blocking === false){\n        onStart()\n        setTimeout(onDone, time)\n      } else {\n        view.transition(time, onStart, onDone)\n      }\n      return\n    }\n\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let keepAdds = adds.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let keepRemoves = removes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      let newAdds = prevAdds.filter(name => removes.indexOf(name) < 0).concat(keepAdds)\n      let newRemoves = prevRemoves.filter(name => adds.indexOf(name) < 0).concat(keepRemoves)\n\n      DOM.putSticky(el, \"classes\", currentEl => {\n        currentEl.classList.remove(...newRemoves)\n        currentEl.classList.add(...newAdds)\n        return [newAdds, newRemoves]\n      })\n    })\n  },\n\n  setOrRemoveAttrs(el, sets, removes){\n    let [prevSets, prevRemoves] = DOM.getSticky(el, \"attrs\", [[], []])\n\n    let alteredAttrs = sets.map(([attr, _val]) => attr).concat(removes)\n    let newSets = prevSets.filter(([attr, _val]) => !alteredAttrs.includes(attr)).concat(sets)\n    let newRemoves = prevRemoves.filter((attr) => !alteredAttrs.includes(attr)).concat(removes)\n\n    DOM.putSticky(el, \"attrs\", currentEl => {\n      newRemoves.forEach(attr => currentEl.removeAttribute(attr))\n      newSets.forEach(([attr, val]) => currentEl.setAttribute(attr, val))\n      return [newSets, newRemoves]\n    })\n  },\n\n  hasAllClasses(el, classes){ return classes.every(name => el.classList.contains(name)) },\n\n  isToggledOut(el, outClasses){\n    return !this.isVisible(el) || this.hasAllClasses(el, outClasses)\n  },\n\n  filterToEls(liveSocket, sourceEl, {to}){\n    let defaultQuery = () => {\n      if(typeof(to) === \"string\"){\n        return document.querySelectorAll(to)\n      } else if(to.closest){\n        let toEl = sourceEl.closest(to.closest)\n        return toEl ? [toEl] : []\n      } else if(to.inner){\n        return sourceEl.querySelectorAll(to.inner)\n      }\n    }\n    return to ? liveSocket.jsQuerySelectorAll(sourceEl, to, defaultQuery) : [sourceEl]\n  },\n\n  defaultDisplay(el){\n    return {tr: \"table-row\", td: \"table-cell\"}[el.tagName.toLowerCase()] || \"block\"\n  },\n\n  transitionClasses(val){\n    if(!val){ return null }\n\n    let [trans, tStart, tEnd] = Array.isArray(val) ? val : [val.split(\" \"), [], []]\n    trans = Array.isArray(trans) ? trans : trans.split(\" \")\n    tStart = Array.isArray(tStart) ? tStart : tStart.split(\" \")\n    tEnd = Array.isArray(tEnd) ? tEnd : tEnd.split(\" \")\n    return [trans, tStart, tEnd]\n  }\n}\n\nexport default JS\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF_SRC,\n  PHX_PENDING_ATTRS,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_STICKY,\n  PHX_EVENT_CLASSES,\n  THROTTLED,\n} from \"./constants\"\n\nimport JS from \"./js\"\n\nimport {\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  isAutoUpload(inputEl){ return inputEl.hasAttribute(\"data-phx-auto-upload\") },\n\n  findUploadInputs(node){\n    const formId = node.id\n    const inputsOutsideForm = this.all(document, `input[type=\"file\"][${PHX_UPLOAD_REF}][form=\"${formId}\"]`)\n    return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`).concat(inputsOutsideForm)\n  },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  wantsNewTab(e){\n    let wantsNewTab = e.ctrlKey || e.shiftKey || e.metaKey || (e.button && e.button === 1)\n    let isDownload = (e.target instanceof HTMLAnchorElement && e.target.hasAttribute(\"download\"))\n    let isTargetBlank = e.target.hasAttribute(\"target\") && e.target.getAttribute(\"target\").toLowerCase() === \"_blank\"\n    let isTargetNamedTab = e.target.hasAttribute(\"target\") && !e.target.getAttribute(\"target\").startsWith(\"_\")\n    return wantsNewTab || isTargetBlank || isDownload || isTargetNamedTab\n  },\n\n  isUnloadableFormSubmit(e){\n    // Ignore form submissions intended to close a native <dialog> element\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog#usage_notes\n    let isDialogSubmit = (e.target && e.target.getAttribute(\"method\") === \"dialog\") ||\n      (e.submitter && e.submitter.getAttribute(\"formmethod\") === \"dialog\")\n\n    if(isDialogSubmit){\n      return false\n    } else {\n      return !e.defaultPrevented && !this.wantsNewTab(e)\n    }\n  },\n\n  isNewPageClick(e, currentLocation){\n    let href = e.target instanceof HTMLAnchorElement ? e.target.getAttribute(\"href\") : null\n    let url\n\n    if(e.defaultPrevented || href === null || this.wantsNewTab(e)){ return false }\n    if(href.startsWith(\"mailto:\") || href.startsWith(\"tel:\")){ return false }\n    if(e.target.isContentEditable){ return false }\n\n    try {\n      url = new URL(href)\n    } catch(e) {\n      try {\n        url = new URL(href, currentLocation)\n      } catch(e) {\n        // bad URL, fallback to let browser try it as external\n        return true\n      }\n    }\n\n    if(url.host === currentLocation.host && url.protocol === currentLocation.protocol){\n      if(url.pathname === currentLocation.pathname && url.search === currentLocation.search){\n        return url.hash === \"\" && !url.href.endsWith(\"#\")\n      }\n    }\n    return url.protocol.startsWith(\"http\")\n  },\n\n  markPhxChildDestroyed(el){\n    if(this.isPhxChild(el)){ el.setAttribute(PHX_SESSION, \"\") }\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxSticky(el){ return this.all(el, `[${PHX_STICKY}]`) },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findExistingParentCIDs(node, cids){\n    // we only want to find parents that exist on the page\n    // if a cid is not on the page, the only way it can be added back to the page\n    // is if a parent adds it back, therefore if a cid does not exist on the page,\n    // we should not try to render it by itself (because it would be rendered twice,\n    // one by the parent, and a second time by itself)\n    let parentCids = new Set()\n    let childrenCids = new Set()\n\n    cids.forEach(cid => {\n      this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node).forEach(parent => {\n        parentCids.add(cid)\n        this.all(parent, `[${PHX_COMPONENT}]`)\n          .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n          .forEach(childCID => childrenCids.add(childCID))\n      })\n    })\n\n    childrenCids.forEach(childCid => parentCids.delete(childCid))\n\n    return parentCids\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  updatePrivate(el, key, defaultVal, updateFunc){\n    let existing = this.private(el, key)\n    if(existing === undefined){\n      this.putPrivate(el, key, updateFunc(defaultVal))\n    } else {\n      this.putPrivate(el, key, updateFunc(existing))\n    }\n  },\n\n  syncPendingAttrs(fromEl, toEl){\n    if(!fromEl.hasAttribute(PHX_REF_SRC)){ return }\n    PHX_EVENT_CLASSES.forEach(className => {\n      fromEl.classList.contains(className) && toEl.classList.add(className)\n    })\n    PHX_PENDING_ATTRS.filter(attr => fromEl.hasAttribute(attr)).forEach(attr => {\n      toEl.setAttribute(attr, fromEl.getAttribute(attr))\n    })\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = source[PHX_PRIVATE]\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    if(titleEl){\n      let {prefix, suffix} = titleEl.dataset\n      document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n    } else {\n      document.title = str\n    }\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => {\n            if(asyncFilter()){ callback() }\n          })\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            const t = setTimeout(() => {\n              if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER) }\n            }, timeout)\n            this.putPrivate(el, THROTTLED, t)\n          }\n        } else {\n          setTimeout(() => {\n            if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle) }\n          }, timeout)\n        }\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => {\n            // because we trigger the callback here,\n            // we also clear the throttle timeout to prevent the callback\n            // from being called again after the timeout fires\n            clearTimeout(this.private(el, THROTTLED))\n            this.triggerCycle(el, DEBOUNCE_TRIGGER)\n          })\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  // maintains or adds privately used hook information\n  // fromEl and toEl can be the same element in the case of a newly added node\n  // fromEl and toEl can be any HTML node type, so we need to check if it's an element node\n  maintainPrivateHooks(fromEl, toEl, phxViewportTop, phxViewportBottom){\n    // maintain the hooks created with createHook\n    if(fromEl.hasAttribute && fromEl.hasAttribute(\"data-phx-hook\") && !toEl.hasAttribute(\"data-phx-hook\")){\n      toEl.setAttribute(\"data-phx-hook\", fromEl.getAttribute(\"data-phx-hook\"))\n    }\n    // add hooks to elements with viewport attributes\n    if(toEl.hasAttribute && (toEl.hasAttribute(phxViewportTop) || toEl.hasAttribute(phxViewportBottom))){\n      toEl.setAttribute(\"data-phx-hook\", \"Phoenix.InfiniteScroll\")\n    }\n  },\n\n  putCustomElHook(el, hook){\n    if(el.isConnected){\n      el.setAttribute(\"data-phx-hook\", \"\")\n    } else {\n      console.error(`\n        hook attached to non-connected DOM element\n        ensure you are calling createHook within your connectedCallback. ${el.outerHTML}\n      `)\n    }\n    this.putPrivate(el, \"custom-el-hook\", hook)\n  },\n\n  getCustomElHook(el){ return this.private(el, \"custom-el-hook\") },\n\n  isUsedInput(el){\n    return (el.nodeType === Node.ELEMENT_NODE &&\n      (this.private(el, PHX_HAS_FOCUSED) || this.private(el, PHX_HAS_SUBMITTED)))\n  },\n\n  resetForm(form){\n    Array.from(form.elements).forEach(input => {\n      this.deletePrivate(input, PHX_HAS_FOCUSED)\n      this.deletePrivate(input, PHX_HAS_SUBMITTED)\n    })\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  isPhxSticky(node){\n    return node.getAttribute && node.getAttribute(PHX_STICKY) !== null\n  },\n\n  isChildOfAny(el, parents){\n    return !!parents.find(parent => parent.contains(el))\n  },\n\n  firstPhxChild(el){\n    return this.isPhxChild(el) ? el : this.all(el, `[${PHX_PARENT_ID}]`)[0]\n  },\n\n  dispatchEvent(target, name, opts = {}){\n    let defaultBubble = true\n    let isUploadTarget = target.nodeName === \"INPUT\" && target.type === \"file\"\n    if(isUploadTarget && name === \"click\"){\n      defaultBubble = false\n    }\n    let bubbles = opts.bubbles === undefined ? defaultBubble : !!opts.bubbles\n    let eventOpts = {bubbles: bubbles, cancelable: true, detail: opts.detail || {}}\n    let event = name === \"click\" ? new MouseEvent(\"click\", eventOpts) : new CustomEvent(name, eventOpts)\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  // merge attributes from source to target\n  // if an element is ignored, we only merge data attributes\n  // including removing data attributes that are no longer in the source\n  mergeAttrs(target, source, opts = {}){\n    let exclude = new Set(opts.exclude || [])\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(!exclude.has(name)){\n        const sourceValue = source.getAttribute(name)\n        if(target.getAttribute(name) !== sourceValue && (!isIgnored || (isIgnored && name.startsWith(\"data-\")))){\n          target.setAttribute(name, sourceValue)\n        }\n      } else {\n        // We exclude the value from being merged on focused inputs, because the\n        // user's input should always win.\n        // We can still assign it as long as the value property is the same, though.\n        // This prevents a situation where the updated hook is not being triggered\n        // when an input is back in its \"original state\", because the attribute\n        // was never changed, see:\n        // https://github.com/phoenixframework/phoenix_live_view/issues/2163\n        if(name === \"value\" && target.value === source.value){\n          // actually set the value attribute to sync it with the value property\n          target.setAttribute(\"value\", source.getAttribute(name))\n        }\n      }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name) && !PHX_PENDING_ATTRS.includes(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {exclude: [\"value\"]}) }\n\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(focused instanceof HTMLSelectElement){ focused.focus() }\n    if(!DOM.isTextualInput(focused)){ return }\n\n    let wasFocused = focused.matches(\":focus\")\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode && childNode.nodeType !== Node.COMMENT_NODE){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN, PHX_ROOT_ID])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  },\n\n  getSticky(el, name, defaultVal){\n    let op = (DOM.private(el, \"sticky\") || []).find(([existingName, ]) => name === existingName)\n    if(op){\n      let [_name, _op, stashedResult] = op\n      return stashedResult\n    } else {\n      return typeof(defaultVal) === \"function\" ? defaultVal() : defaultVal\n    }\n  },\n\n  deleteSticky(el, name){\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      return ops.filter(([existingName, _]) => existingName !== name)\n    })\n  },\n\n  putSticky(el, name, op){\n    let stashedResult = op(el)\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      let existingIndex = ops.findIndex(([existingName, ]) => name === existingName)\n      if(existingIndex >= 0){\n        ops[existingIndex] = [name, op, stashedResult]\n      } else {\n        ops.push([name, op, stashedResult])\n      }\n      return ops\n    })\n  },\n\n  applyStickyOperations(el){\n    let ops = DOM.private(el, \"sticky\")\n    if(!ops){ return }\n\n    ops.forEach(([name, op, _stashed]) => this.putSticky(el, name, op))\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  static isPreflightInProgress(file){\n    return file._preflightInProgress === true\n  }\n\n  static markPreflightInProgress(file){\n    file._preflightInProgress = true\n  }\n\n  constructor(fileEl, file, view, autoUpload){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function(){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.autoUpload = autoUpload\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  isCancelled(){ return this._isCancelled }\n\n  cancel(){\n    this.file._preflightInProgress = false\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    if(!this.isAutoUpload()){ LiveUploader.clearFiles(this.fileEl) }\n  }\n\n  isAutoUpload(){ return this.autoUpload }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){\n      LiveUploader.untrackFile(this.fileEl, this.file)\n      this.cancel()\n    }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      relative_path: this.file.webkitRelativePath,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref,\n      meta: typeof(this.file.meta) === \"function\" ? this.file.meta() : undefined\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.last_modified = file.lastModified\n      entry.name = file.name || entry.ref\n      entry.relative_path = file.webkitRelativePath\n      entry.type = file.type\n      entry.size = file.size\n      if(typeof(file.meta) === \"function\"){ entry.meta = file.meta() }\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files, dataTransfer){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.updatePrivate(inputEl, \"files\", [], (existing) => existing.concat(newFiles))\n      inputEl.value = null\n    } else {\n      // Reset inputEl files to align output with programmatic changes (i.e. drag and drop)\n      if(dataTransfer && dataTransfer.files.length > 0){ inputEl.files = dataTransfer.files }\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f) && !UploadEntry.isPreflightInProgress(f))\n  }\n\n  static markPreflightInProgress(entries){\n    entries.forEach(entry => UploadEntry.markPreflightInProgress(entry.file))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.autoUpload = DOM.isAutoUpload(inputEl)\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view, this.autoUpload))\n\n    // prevent sending duplicate preflight requests\n    LiveUploader.markPreflightInProgress(this._entries)\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  isAutoUpload(){ return this.autoUpload }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        if(entry.isCancelled()){\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        } else {\n          entry.zipPostFlight(resp)\n          entry.onDone(() => {\n            this.numEntriesInProgress--\n            if(this.numEntriesInProgress === 0){ this.onComplete() }\n          })\n        }\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      if(!entry.meta){ return acc }\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\nimport ARIA from \"./aria\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view().cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  },\n  FocusWrap: {\n    mounted(){\n      this.focusStart = this.el.firstElementChild\n      this.focusEnd = this.el.lastElementChild\n      this.focusStart.addEventListener(\"focus\", () => ARIA.focusLast(this.el))\n      this.focusEnd.addEventListener(\"focus\", () => ARIA.focusFirst(this.el))\n      this.el.addEventListener(\"phx:show-end\", () => this.el.focus())\n      if(window.getComputedStyle(this.el).display !== \"none\"){\n        ARIA.focusFirst(this.el)\n      }\n    }\n  }\n}\n\nlet findScrollContainer = (el) => {\n  // the scroll event won't be fired on the html/body element even if overflow is set\n  // therefore we return null to instead listen for scroll events on document\n  if ([\"HTML\", \"BODY\"].indexOf(el.nodeName.toUpperCase()) >= 0) return null\n  if([\"scroll\", \"auto\"].indexOf(getComputedStyle(el).overflowY) >= 0) return el\n  return findScrollContainer(el.parentElement)\n}\n\nlet scrollTop = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.scrollTop\n  } else {\n    return document.documentElement.scrollTop || document.body.scrollTop\n  }\n}\n\nlet bottom = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.getBoundingClientRect().bottom\n  } else {\n    // when we have no container, the whole page scrolls,\n    // therefore the bottom coordinate is the viewport height\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n}\n\nlet top = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.getBoundingClientRect().top\n  } else {\n    // when we have no container the whole page scrolls,\n    // therefore the top coordinate is 0\n    return 0\n  }\n}\n\nlet isAtViewportTop = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return Math.ceil(rect.top) >= top(scrollContainer) && Math.ceil(rect.left) >= 0 && Math.floor(rect.top) <= bottom(scrollContainer)\n}\n\nlet isAtViewportBottom = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return Math.ceil(rect.bottom) >= top(scrollContainer) && Math.ceil(rect.left) >= 0 && Math.floor(rect.bottom) <= bottom(scrollContainer)\n}\n\nlet isWithinViewport = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return Math.ceil(rect.top) >= top(scrollContainer) && Math.ceil(rect.left) >= 0 && Math.floor(rect.top) <= bottom(scrollContainer)\n}\n\nHooks.InfiniteScroll = {\n  mounted(){\n    this.scrollContainer = findScrollContainer(this.el)\n    let scrollBefore = scrollTop(this.scrollContainer)\n    let topOverran = false\n    let throttleInterval = 500\n    let pendingOp = null\n\n    let onTopOverrun = this.throttle(throttleInterval, (topEvent, firstChild) => {\n      pendingOp = () => true\n      this.liveSocket.execJSHookPush(this.el, topEvent, {id: firstChild.id, _overran: true}, () => {\n        pendingOp = null\n      })\n    })\n\n    let onFirstChildAtTop = this.throttle(throttleInterval, (topEvent, firstChild) => {\n      pendingOp = () => firstChild.scrollIntoView({block: \"start\"})\n      this.liveSocket.execJSHookPush(this.el, topEvent, {id: firstChild.id}, () => {\n        pendingOp = null\n        // make sure that the DOM is patched by waiting for the next tick\n        window.requestAnimationFrame(() => {\n          if(!isWithinViewport(firstChild, this.scrollContainer)){\n            firstChild.scrollIntoView({block: \"start\"})\n          }\n        })\n      })\n    })\n\n    let onLastChildAtBottom = this.throttle(throttleInterval, (bottomEvent, lastChild) => {\n      pendingOp = () => lastChild.scrollIntoView({block: \"end\"})\n      this.liveSocket.execJSHookPush(this.el, bottomEvent, {id: lastChild.id}, () => {\n        pendingOp = null\n        // make sure that the DOM is patched by waiting for the next tick\n        window.requestAnimationFrame(() => {\n          if(!isWithinViewport(lastChild, this.scrollContainer)){\n            lastChild.scrollIntoView({block: \"end\"})\n          }\n        })\n      })\n    })\n\n    this.onScroll = (_e) => {\n      let scrollNow = scrollTop(this.scrollContainer)\n\n      if(pendingOp){\n        scrollBefore = scrollNow\n        return pendingOp()\n      }\n      let rect = this.el.getBoundingClientRect()\n      let topEvent = this.el.getAttribute(this.liveSocket.binding(\"viewport-top\"))\n      let bottomEvent = this.el.getAttribute(this.liveSocket.binding(\"viewport-bottom\"))\n      let lastChild = this.el.lastElementChild\n      let firstChild = this.el.firstElementChild\n      let isScrollingUp = scrollNow < scrollBefore\n      let isScrollingDown = scrollNow > scrollBefore\n\n      // el overran while scrolling up\n      if(isScrollingUp && topEvent && !topOverran && rect.top >= 0){\n        topOverran = true\n        onTopOverrun(topEvent, firstChild)\n      } else if(isScrollingDown && topOverran && rect.top <= 0){\n        topOverran = false\n      }\n\n      if(topEvent && isScrollingUp && isAtViewportTop(firstChild, this.scrollContainer)){\n        onFirstChildAtTop(topEvent, firstChild)\n      } else if(bottomEvent && isScrollingDown && isAtViewportBottom(lastChild, this.scrollContainer)){\n        onLastChildAtBottom(bottomEvent, lastChild)\n      }\n      scrollBefore = scrollNow\n    }\n\n    if(this.scrollContainer){\n      this.scrollContainer.addEventListener(\"scroll\", this.onScroll)\n    } else {\n      window.addEventListener(\"scroll\", this.onScroll)\n    }\n  },\n  \n  destroyed(){\n    if(this.scrollContainer){\n      this.scrollContainer.removeEventListener(\"scroll\", this.onScroll)\n    } else {\n      window.removeEventListener(\"scroll\", this.onScroll)\n    }\n  },\n\n  throttle(interval, callback){\n    let lastCallAt = 0\n    let timer\n\n    return (...args) => {\n      let now = Date.now()\n      let remainingTime = interval - (now - lastCallAt)\n\n      if(remainingTime <= 0 || remainingTime > interval){\n        if(timer) {\n          clearTimeout(timer)\n          timer = null\n        }\n        lastCallAt = now\n        callback(...args)\n      } else if(!timer){\n        timer = setTimeout(() => {\n          lastCallAt = Date.now()\n          timer = null\n          callback(...args)\n        }, remainingTime)\n      }\n    }\n  }\n}\nexport default Hooks\n", "import {\n  PHX_REF_LOADING,\n  PHX_REF_LOCK,\n  PHX_REF_SRC,\n  PHX_EVENT_CLASSES,\n  PHX_DISABLED,\n  PHX_READONLY,\n  PHX_DISABLE_WITH_RESTORE\n} from \"./constants\"\n\nimport DOM from \"./dom\"\n\nexport default class ElementRef {\n  constructor(el){\n    this.el = el\n    this.loadingRef = el.hasAttribute(PHX_REF_LOADING) ? parseInt(el.getAttribute(PHX_REF_LOADING), 10) : null\n    this.lockRef = el.hasAttribute(PHX_REF_LOCK) ? parseInt(el.getAttribute(PHX_REF_LOCK), 10) : null\n  }\n\n  // public\n\n  maybeUndo(ref, phxEvent, eachCloneCallback){\n    if(!this.isWithin(ref)){ return }\n\n    // undo locks and apply clones\n    this.undoLocks(ref, phxEvent, eachCloneCallback)\n\n    // undo loading states\n    this.undoLoading(ref, phxEvent)\n\n    // clean up if fully resolved\n    if(this.isFullyResolvedBy(ref)){ this.el.removeAttribute(PHX_REF_SRC) }\n  }\n\n  // private\n\n  isWithin(ref){\n    return !((this.loadingRef !== null && this.loadingRef > ref) && (this.lockRef !== null && this.lockRef > ref))\n  }\n\n  // Check for cloned PHX_REF_LOCK element that has been morphed behind\n  // the scenes while this element was locked in the DOM.\n  // When we apply the cloned tree to the active DOM element, we must\n  //\n  //   1. execute pending mounted hooks for nodes now in the DOM\n  //   2. undo any ref inside the cloned tree that has since been ack'd\n  undoLocks(ref, phxEvent, eachCloneCallback){\n    if(!this.isLockUndoneBy(ref)){ return }\n\n    let clonedTree = DOM.private(this.el, PHX_REF_LOCK)\n    if(clonedTree){\n      eachCloneCallback(clonedTree)\n      DOM.deletePrivate(this.el, PHX_REF_LOCK)\n    }\n    this.el.removeAttribute(PHX_REF_LOCK)\n\n    let opts = {detail: {ref: ref, event: phxEvent}, bubbles: true, cancelable: false}\n    this.el.dispatchEvent(new CustomEvent(`phx:undo-lock:${this.lockRef}`, opts))\n  }\n\n  undoLoading(ref, phxEvent){\n    if(!this.isLoadingUndoneBy(ref)){\n      if(this.canUndoLoading(ref) && this.el.classList.contains(\"phx-submit-loading\")){\n        this.el.classList.remove(\"phx-change-loading\")\n      }\n      return\n    }\n\n    if(this.canUndoLoading(ref)){\n      this.el.removeAttribute(PHX_REF_LOADING)\n      let disabledVal = this.el.getAttribute(PHX_DISABLED)\n      let readOnlyVal = this.el.getAttribute(PHX_READONLY)\n      // restore inputs\n      if(readOnlyVal !== null){\n        this.el.readOnly = readOnlyVal === \"true\" ? true : false\n        this.el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        this.el.disabled = disabledVal === \"true\" ? true : false\n        this.el.removeAttribute(PHX_DISABLED)\n      }\n      // restore disables\n      let disableRestore = this.el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        this.el.innerText = disableRestore\n        this.el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n\n      let opts = {detail: {ref: ref, event: phxEvent}, bubbles: true, cancelable: false}\n      this.el.dispatchEvent(new CustomEvent(`phx:undo-loading:${this.loadingRef}`, opts))\n    }\n\n    // remove classes\n    PHX_EVENT_CLASSES.forEach(name => {\n      if(name !== \"phx-submit-loading\" || this.canUndoLoading(ref)){\n        DOM.removeClass(this.el, name)\n      }\n    })\n  }\n\n  isLoadingUndoneBy(ref){ return this.loadingRef === null ? false : this.loadingRef <= ref }\n  isLockUndoneBy(ref){ return this.lockRef === null ? false : this.lockRef <= ref }\n\n  isFullyResolvedBy(ref){\n    return (this.loadingRef === null || this.loadingRef <= ref) && (this.lockRef === null || this.lockRef <= ref)\n  }\n\n  // only remove the phx-submit-loading class if we are not locked\n  canUndoLoading(ref){ return this.lockRef === null || this.lockRef <= ref }\n}\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        var beforeUpdateResult = onBeforeElUpdated(fromEl, toEl);\n        if (beforeUpdateResult === false) {\n          return;\n        } else if (beforeUpdateResult instanceof HTMLElement) {\n          fromEl = beforeUpdateResult;\n          // reindex the new fromEl in case it's not in the same\n          // tree as the original fromEl\n          // (Phoenix LiveView sometimes returns a cloned tree,\n          //  but keyed lookups would still point to the original tree)\n          indexTree(fromEl);\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl, toEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                      curFromNodeKey = getNodeKey(curFromNodeChild);\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_PRUNE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_MAGIC_ID,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE,\n  PHX_REF_SRC,\n  PHX_REF_LOCK,\n  PHX_STREAM,\n  PHX_STREAM_REF,\n  PHX_VIEWPORT_TOP,\n  PHX_VIEWPORT_BOTTOM,\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  isCid\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchWithClonedTree(container, clonedTree, liveSocket){\n    let activeElement = liveSocket.getActiveElement()\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n\n    morphdom(container, clonedTree, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        DOM.syncPendingAttrs(fromEl, toEl)\n        // we cannot morph locked children\n        if(!container.isSameNode(fromEl) && fromEl.hasAttribute(PHX_REF_LOCK)){ return false }\n        if(DOM.isIgnored(fromEl, phxUpdate)){ return false }\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, streams, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.streams = streams\n    this.streamInserts = {}\n    this.streamComponentRestore = {}\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.pendingRemoves = []\n    this.phxRemove = this.liveSocket.binding(\"remove\")\n    this.targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: [],\n      aftertransitionsDiscarded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    let phxUpdate = this.liveSocket.binding(PHX_UPDATE)\n    DOM.all(this.container, `[${phxUpdate}=append] > *, [${phxUpdate}=prepend] > *`, el => {\n      el.setAttribute(PHX_PRUNE, \"\")\n    })\n  }\n\n  perform(isJoinPatch){\n    let {view, liveSocket, html, container, targetContainer} = this\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxViewportTop = liveSocket.binding(PHX_VIEWPORT_TOP)\n    let phxViewportBottom = liveSocket.binding(PHX_VIEWPORT_BOTTOM)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n\n    let externalFormTriggered = null\n\n    function morph(targetContainer, source, withChildren=false){\n      let morphCallbacks = {\n        // normally, we are running with childrenOnly, as the patch HTML for a LV\n        // does not include the LV attrs (data-phx-session, etc.)\n        // when we are patching a live component, we do want to patch the root element as well;\n        // another case is the recursive patch of a stream item that was kept on reset (-> onBeforeNodeAdded)\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null && !withChildren,\n        getNodeKey: (node) => {\n          if(DOM.isPhxDestroyed(node)){ return null }\n          // If we have a join patch, then by definition there was no PHX_MAGIC_ID.\n          // This is important to reduce the amount of elements morphdom discards.\n          if(isJoinPatch){ return node.id }\n          return node.id || (node.getAttribute && node.getAttribute(PHX_MAGIC_ID))\n        },\n        // skip indexing from children when container is stream\n        skipFromChildren: (from) => { return from.getAttribute(phxUpdate) === PHX_STREAM },\n        // tell morphdom how to add a child\n        addChild: (parent, child) => {\n          let {ref, streamAt} = this.getStreamInsert(child)\n          if(ref === undefined){ return parent.appendChild(child) }\n\n          this.setStreamRef(child, ref)\n\n          // streaming\n          if(streamAt === 0){\n            parent.insertAdjacentElement(\"afterbegin\", child)\n          } else if(streamAt === -1){\n            let lastChild = parent.lastElementChild\n            if(lastChild && !lastChild.hasAttribute(PHX_STREAM_REF)){\n              let nonStreamChild = Array.from(parent.children).find(c => !c.hasAttribute(PHX_STREAM_REF))\n              parent.insertBefore(child, nonStreamChild)\n            } else {\n              parent.appendChild(child)\n            }\n          } else if(streamAt > 0){\n            let sibling = Array.from(parent.children)[streamAt]\n            parent.insertBefore(child, sibling)\n          }\n        },\n        onBeforeNodeAdded: (el) => {\n          DOM.maintainPrivateHooks(el, el, phxViewportTop, phxViewportBottom)\n          this.trackBefore(\"added\", el)\n\n          let morphedEl = el\n          // this is a stream item that was kept on reset, recursively morph it\n          if(this.streamComponentRestore[el.id]){\n            morphedEl = this.streamComponentRestore[el.id]\n            delete this.streamComponentRestore[el.id]\n            morph.call(this, morphedEl, el, true)\n          }\n\n          return morphedEl\n        },\n        onNodeAdded: (el) => {\n          if(el.getAttribute){ this.maybeReOrderStream(el, true) }\n\n          // hack to fix Safari handling of img srcset and video tags\n          if(el instanceof HTMLImageElement && el.srcset){\n            el.srcset = el.srcset\n          } else if(el instanceof HTMLVideoElement && el.autoplay){\n            el.play()\n          }\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n\n          // nested view handling\n          if((DOM.isPhxChild(el) && view.ownsElement(el)) || DOM.isPhxSticky(el) && view.ownsElement(el.parentNode)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => this.onNodeDiscarded(el),\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_PRUNE) !== null){ return true }\n          if(el.parentElement !== null && el.id &&\n            DOM.isPhxUpdate(el.parentElement, phxUpdate, [PHX_STREAM, \"append\", \"prepend\"])){\n            return false\n          }\n          if(this.maybePendingRemove(el)){ return false }\n          if(this.skipCIDSibling(el)){ return false }\n\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n          this.maybeReOrderStream(el, false)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          // if we are patching the root target container and the id has changed, treat it as a new node\n          // by replacing the fromEl with the toEl, which ensures hooks are torn down and re-created\n          if(fromEl.id && fromEl.isSameNode(targetContainer) && fromEl.id !== toEl.id){\n            morphCallbacks.onNodeDiscarded(fromEl)\n            fromEl.replaceWith(toEl)\n            return morphCallbacks.onNodeAdded(toEl)\n          }\n          DOM.syncPendingAttrs(fromEl, toEl)\n          DOM.maintainPrivateHooks(fromEl, toEl, phxViewportTop, phxViewportBottom)\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){\n            // if this is a live component used in a stream, we may need to reorder it\n            this.maybeReOrderStream(fromEl)\n            return false\n          }\n          if(DOM.isPhxSticky(fromEl)){\n            [PHX_SESSION, PHX_STATIC, PHX_ROOT_ID]\n              .map(attr => [attr, fromEl.getAttribute(attr), toEl.getAttribute(attr)])\n              .forEach(([attr, fromVal, toVal]) => {\n                if(toVal && fromVal !== toVal){ fromEl.setAttribute(attr, toVal) }\n              })\n\n            return false\n          }\n          if(DOM.isIgnored(fromEl, phxUpdate) || (fromEl.form && fromEl.form.isSameNode(externalFormTriggered))){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: DOM.isIgnored(fromEl, phxUpdate)})\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          // If the element has  PHX_REF_SRC, it is loading or locked and awaiting an ack.\n          // If it's locked, we clone the fromEl tree and instruct morphdom to use\n          // the cloned tree as the source of the morph for this branch from here on out.\n          // We keep a reference to the cloned tree in the element's private data, and\n          // on ack (view.undoRefs), we morph the cloned tree with the true fromEl in the DOM to\n          // apply any changes that happened while the element was locked.\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          let focusedSelectChanged = isFocusedFormEl && this.isChangedSelect(fromEl, toEl)\n          if(fromEl.hasAttribute(PHX_REF_SRC)){\n            if(DOM.isUploadInput(fromEl)){\n              DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            DOM.applyStickyOperations(fromEl)\n            let isLocked = fromEl.hasAttribute(PHX_REF_LOCK)\n            let clone = isLocked ? DOM.private(fromEl, PHX_REF_LOCK) || fromEl.cloneNode(true) : null\n            if(clone){\n              DOM.putPrivate(fromEl, PHX_REF_LOCK, clone)\n              if(!isFocusedFormEl){\n                fromEl = clone\n              }\n            }\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n\n          // skip patching focused inputs unless focus is a select that has changed options\n          if(isFocusedFormEl && fromEl.type !== \"hidden\" && !focusedSelectChanged){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          } else {\n            // blur focused select if it changed so native UI is updated (ie safari won't update visible options)\n            if(focusedSelectChanged){ fromEl.blur() }\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n\n            DOM.syncAttrsToProps(toEl)\n            DOM.applyStickyOperations(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return fromEl\n          }\n        }\n      }\n      morphdom(targetContainer, source, morphCallbacks)\n    }\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      this.streams.forEach(([ref, inserts, deleteIds, reset]) => {\n        inserts.forEach(([key, streamAt, limit]) => {\n          this.streamInserts[key] = {ref, streamAt, limit, reset}\n        })\n        if(reset !== undefined){\n          DOM.all(container, `[${PHX_STREAM_REF}=\"${ref}\"]`, child => {\n            this.removeStreamChildElement(child)\n          })\n        }\n        deleteIds.forEach(id => {\n          let child = container.querySelector(`[id=\"${id}\"]`)\n          if(child){ this.removeStreamChildElement(child) }\n        })\n      })\n\n      // clear stream items from the dead render if they are not inserted again\n      if(isJoinPatch){\n        DOM.all(this.container, `[${phxUpdate}=${PHX_STREAM}]`, el => {\n          // make sure to only remove elements owned by the current view\n          // see https://github.com/phoenixframework/phoenix_live_view/issues/3047\n          this.liveSocket.owner(el, (view) => {\n            if(view === this.view){\n              Array.from(el.children).forEach(child => {\n                this.removeStreamChildElement(child)\n              })\n            }\n          })\n        })\n      }\n\n      morph.call(this, targetContainer, html)\n    })\n\n    if(liveSocket.isDebugEnabled()){\n      detectDuplicateIds()\n      // warn if there are any inputs named \"id\"\n      Array.from(document.querySelectorAll(\"input[name=id]\")).forEach(node => {\n        if(node.form){\n          console.error(\"Detected an input with name=\\\"id\\\" inside a form! This will cause problems when patching the DOM.\\n\", node)\n        }\n      })\n    }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    this.transitionPendingRemoves()\n\n    if(externalFormTriggered){\n      liveSocket.unload()\n      // use prototype's submit in case there's a form control with name or id of \"submit\"\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit\n      Object.getPrototypeOf(externalFormTriggered).submit.call(externalFormTriggered)\n    }\n    return true\n  }\n\n  onNodeDiscarded(el){\n    // nested view handling\n    if(DOM.isPhxChild(el) || DOM.isPhxSticky(el)){ this.liveSocket.destroyViewByEl(el) }\n    this.trackAfter(\"discarded\", el)\n  }\n\n  maybePendingRemove(node){\n    if(node.getAttribute && node.getAttribute(this.phxRemove) !== null){\n      this.pendingRemoves.push(node)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  removeStreamChildElement(child){\n    // we need to store the node if it is actually re-added in the same patch\n    // we do NOT want to execute phx-remove, we do NOT want to call onNodeDiscarded\n    if(this.streamInserts[child.id]){\n      this.streamComponentRestore[child.id] = child\n      child.remove()\n    } else {\n      // only remove the element now if it has no phx-remove binding\n      if(!this.maybePendingRemove(child)){\n        child.remove()\n        this.onNodeDiscarded(child)\n      }\n    }\n  }\n\n  getStreamInsert(el){\n    let insert = el.id ? this.streamInserts[el.id] : {}\n    return insert || {}\n  }\n\n  setStreamRef(el, ref){\n    DOM.putSticky(el, PHX_STREAM_REF, el => el.setAttribute(PHX_STREAM_REF, ref))\n  }\n\n  maybeReOrderStream(el, isNew){\n    let {ref, streamAt, reset} = this.getStreamInsert(el)\n    if(streamAt === undefined){ return }\n\n    // we need to set the PHX_STREAM_REF here as well as addChild is invoked only for parents\n    this.setStreamRef(el, ref)\n\n    if(!reset && !isNew){\n      // we only reorder if the element is new or it's a stream reset\n      return\n    }\n\n    // check if the element has a parent element;\n    // it doesn't if we are currently recursively morphing (restoring a saved stream child)\n    // because the element is not yet added to the real dom;\n    // reordering does not make sense in that case anyway\n    if(!el.parentElement){ return }\n\n    if(streamAt === 0){\n      el.parentElement.insertBefore(el, el.parentElement.firstElementChild)\n    } else if(streamAt > 0){\n      let children = Array.from(el.parentElement.children)\n      let oldIndex = children.indexOf(el)\n      if(streamAt >= children.length - 1){\n        el.parentElement.appendChild(el)\n      } else {\n        let sibling = children[streamAt]\n        if(oldIndex > streamAt){\n          el.parentElement.insertBefore(el, sibling)\n        } else {\n          el.parentElement.insertBefore(el, sibling.nextElementSibling)\n        }\n      }\n    }\n\n    this.maybeLimitStream(el)\n  }\n\n  maybeLimitStream(el){\n    let {limit} = this.getStreamInsert(el)\n    let children = limit !== null && Array.from(el.parentElement.children)\n    if(limit && limit < 0 && children.length > limit * -1){\n      children.slice(0, children.length + limit).forEach(child => this.removeStreamChildElement(child))\n    } else if(limit && limit >= 0 && children.length > limit){\n      children.slice(limit).forEach(child => this.removeStreamChildElement(child))\n    }\n  }\n\n  transitionPendingRemoves(){\n    let {pendingRemoves, liveSocket} = this\n    if(pendingRemoves.length > 0){\n      liveSocket.transitionRemoves(pendingRemoves, false, () => {\n        pendingRemoves.forEach(el => {\n          let child = DOM.firstPhxChild(el)\n          if(child){ liveSocket.destroyViewByEl(child) }\n          el.remove()\n        })\n        this.trackAfter(\"transitionsDiscarded\", pendingRemoves)\n      })\n    }\n  }\n\n  isChangedSelect(fromEl, toEl){\n    if(!(fromEl instanceof HTMLSelectElement) || fromEl.multiple){ return false }\n    if(fromEl.options.length !== toEl.options.length){ return true }\n\n    // keep the current value\n    toEl.value = fromEl.value\n\n    // in general we have to be very careful with using isEqualNode as it does not a reliable\n    // DOM tree equality check, but for selection attributes and options it works fine\n    return !fromEl.isEqualNode(toEl)\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.hasAttribute(PHX_SKIP)\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  indexOf(parent, child){ return Array.from(parent.children).indexOf(child) }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  TEMPLATES,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  PHX_MAGIC_ID,\n  REPLY,\n  STATIC,\n  TITLE,\n  STREAM,\n  ROOT,\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nconst VOID_TAGS = new Set([\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n])\nconst quoteChars = new Set([\"'\", '\"'])\n\nexport let modifyRoot = (html, attrs, clearInnerHTML) => {\n  let i = 0\n  let insideComment = false\n  let beforeTag, afterTag, tag, tagNameEndsAt, id, newHTML\n\n  let lookahead = html.match(/^(\\s*(?:<!--.*?-->\\s*)*)<([^\\s\\/>]+)/)\n  if(lookahead === null) { throw new Error(`malformed html ${html}`) }\n\n  i = lookahead[0].length\n  beforeTag = lookahead[1]\n  tag = lookahead[2]\n  tagNameEndsAt = i\n\n  // Scan the opening tag for id, if there is any\n  for(i; i < html.length; i++){\n    if(html.charAt(i) === \">\" ){ break }\n    if(html.charAt(i) === \"=\"){\n      let isId = html.slice(i - 3, i) === \" id\"\n      i++;\n      let char = html.charAt(i)\n      if (quoteChars.has(char)) {\n        let attrStartsAt = i\n        i++\n        for(i; i < html.length; i++){\n          if(html.charAt(i) === char){ break }\n        }\n        if (isId) {\n          id = html.slice(attrStartsAt + 1, i)\n          break\n        }\n      }\n    }\n  }\n\n  let closeAt = html.length - 1\n  insideComment = false\n  while(closeAt >= beforeTag.length + tag.length){\n    let char = html.charAt(closeAt)\n    if(insideComment){\n      if(char === \"-\" && html.slice(closeAt - 3, closeAt) === \"<!-\"){\n        insideComment = false\n        closeAt -= 4\n      } else {\n        closeAt -= 1\n      }\n    } else if(char === \">\" && html.slice(closeAt - 2, closeAt) === \"--\"){\n      insideComment = true\n      closeAt -= 3\n    } else if(char === \">\"){\n      break\n    } else {\n      closeAt -= 1\n    }\n  }\n  afterTag = html.slice(closeAt + 1, html.length)\n\n  let attrsStr =\n    Object.keys(attrs)\n    .map(attr => attrs[attr] === true ? attr : `${attr}=\"${attrs[attr]}\"`)\n    .join(\" \")\n\n  if(clearInnerHTML){\n    // Keep the id if any\n    let idAttrStr = id ? ` id=\"${id}\"` : \"\";\n    if(VOID_TAGS.has(tag)){\n      newHTML = `<${tag}${idAttrStr}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}/>`\n    } else {\n      newHTML = `<${tag}${idAttrStr}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}></${tag}>`\n    }\n  } else {\n    let rest = html.slice(tagNameEndsAt, closeAt + 1)\n    newHTML = `<${tag}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}${rest}`\n  }\n\n  return [newHTML, beforeTag, afterTag]\n}\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.magicId = 0\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    let [str, streams] = this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids, true, {})\n    return [str, streams]\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids, changeTracking, rootAttrs){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids, streams: new Set()}\n    this.toOutputBuffer(rendered, null, output, changeTracking, rootAttrs)\n    return [output.buffer, output.streams]\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  resetRender(cid){\n    // we are racing a component destroy, it could not exist, so\n    // make sure that we don't try to set reset on undefined\n    if(this.rendered[COMPONENTS][cid]){\n      this.rendered[COMPONENTS][cid].reset = true\n    }\n  }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(let cid in newc){ oldc[cid] = newc[cid] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff, true)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined || oldc[cid] === undefined ?\n          cdiff : this.cloneMerge(oldc[cid], cdiff, false)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      let isObjVal = isObject(val)\n      if(isObjVal && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n    if(target[ROOT]){\n      target.newRender = true\n    }\n  }\n\n  // Merges cid trees together, copying statics from source tree.\n  //\n  // The `pruneMagicId` is passed to control pruning the magicId of the\n  // target. We must always prune the magicId when we are sharing statics\n  // from another component. If not pruning, we replicate the logic from\n  // mutableMerge, where we set newRender to true if there is a root\n  // (effectively forcing the new version to be rendered instead of skipped)\n  //\n  cloneMerge(target, source, pruneMagicId){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val, pruneMagicId)\n      } else if(val === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, {}, pruneMagicId)\n      }\n    }\n    if(pruneMagicId){\n      delete merged.magicId\n      delete merged.newRender\n    } else if(target[ROOT]){\n      merged.newRender = true\n    }\n    return merged\n  }\n\n  componentToString(cid){\n    let [str, streams] = this.recursiveCIDToString(this.rendered[COMPONENTS], cid, null)\n    let [strippedHTML, _before, _after] = modifyRoot(str, {})\n    return [strippedHTML, streams]\n  }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  templateStatic(part, templates){\n    if(typeof (part) === \"number\") {\n      return templates[part]\n    } else {\n      return part\n    }\n  }\n\n  nextMagicID(){\n    this.magicId++\n    return `m${this.magicId}-${this.parentViewId()}`\n  }\n\n  // Converts rendered tree to output buffer.\n  //\n  // changeTracking controls if we can apply the PHX_SKIP optimization.\n  // It is disabled for comprehensions since we must re-render the entire collection\n  // and no individual element is tracked inside the comprehension.\n  toOutputBuffer(rendered, templates, output, changeTracking, rootAttrs = {}){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, templates, output) }\n    let {[STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n    let isRoot = rendered[ROOT]\n    let prevBuffer = output.buffer\n    if(isRoot){ output.buffer = \"\" }\n\n    // this condition is called when first rendering an optimizable function component.\n    // LC have their magicId previously set\n    if(changeTracking && isRoot && !rendered.magicId){\n      rendered.newRender = true\n      rendered.magicId = this.nextMagicID()\n    }\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], templates, output, changeTracking)\n      output.buffer += statics[i]\n    }\n\n    // Applies the root tag \"skip\" optimization if supported, which clears\n    // the root tag attributes and innerHTML, and only maintains the magicId.\n    // We can only skip when changeTracking is supported (outside of a comprehension),\n    // and when the root element hasn't experienced an unrendered merge (newRender true).\n    if(isRoot){\n      let skip = false\n      let attrs\n      // When a LC is re-added to the page, we need to re-render the entire LC tree,\n      // therefore changeTracking is false; however, we need to keep all the magicIds\n      // from any function component so the next time the LC is updated, we can apply\n      // the skip optimization\n      if(changeTracking || rendered.magicId){\n        skip = changeTracking && !rendered.newRender\n        attrs = {[PHX_MAGIC_ID]: rendered.magicId, ...rootAttrs}\n      } else {\n        attrs = rootAttrs\n      }\n      if(skip){ attrs[PHX_SKIP] = true }\n      let [newRoot, commentBefore, commentAfter] = modifyRoot(output.buffer, attrs, skip)\n      rendered.newRender = false\n      output.buffer = prevBuffer + commentBefore + newRoot + commentAfter\n    }\n  }\n\n  comprehensionToBuffer(rendered, templates, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics, [STREAM]: stream} = rendered\n    let [_ref, _inserts, deleteIds, reset] = stream || [null, {}, [], null]\n    statics = this.templateStatic(statics, templates)\n    let compTemplates = templates || rendered[TEMPLATES]\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        // Inside a comprehension, we don't track how dynamics change\n        // over time (and features like streams would make that impossible\n        // unless we move the stream diffing away from morphdom),\n        // so we can't perform root change tracking.\n        let changeTracking = false\n        this.dynamicToBuffer(dynamic[i - 1], compTemplates, output, changeTracking)\n        output.buffer += statics[i]\n      }\n    }\n\n    if(stream !== undefined && (rendered[DYNAMICS].length > 0 || deleteIds.length > 0 || reset)){\n      delete rendered[STREAM]\n      rendered[DYNAMICS] = []\n      output.streams.add(stream)\n    }\n  }\n\n  dynamicToBuffer(rendered, templates, output, changeTracking){\n    if(typeof (rendered) === \"number\"){\n      let [str, streams] = this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n      output.buffer += str\n      output.streams = new Set([...output.streams, ...streams])\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, templates, output, changeTracking, {})\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let attrs = {[PHX_COMPONENT]: cid}\n    let skip = onlyCids && !onlyCids.has(cid)\n    // Two optimization paths apply here:\n    //\n    //   1. The onlyCids optimization works by the server diff telling us only specific\n    //     cid's have changed. This allows us to skip rendering any component that hasn't changed,\n    //     which ultimately sets PHX_SKIP root attribute and avoids rendering the innerHTML.\n    //\n    //   2. The root PHX_SKIP optimization generalizes to all HEEx function components, and\n    //     works in the same PHX_SKIP attribute fashion as 1, but the newRender tracking is done\n    //     at the general diff merge level. If we merge a diff with new dynamics, we necessarily have\n    //     experienced a change which must be a newRender, and thus we can't skip the render.\n    //\n    // Both optimization flows apply here. newRender is set based on the onlyCids optimization, and\n    // we track a deterministic magicId based on the cid.\n    //\n    // changeTracking is about the entire tree\n    // newRender is about the current root in the tree\n    //\n    // By default changeTracking is enabled, but we special case the flow where the client is pruning\n    // cids and the server adds the component back. In such cases, we explicitly disable changeTracking\n    // with resetRender for this cid, then re-enable it after the recursive call to skip the optimization\n    // for the entire component tree.\n    component.newRender = !skip\n    component.magicId = `c${cid}-${this.parentViewId()}`\n    // enable change tracking as long as the component hasn't been reset\n    let changeTracking = !component.reset\n    let [html, streams] = this.recursiveToString(component, components, onlyCids, changeTracking, attrs)\n    // disable reset after we've rendered\n    delete component.reset\n\n    return [html, streams]\n  }\n}\n", "import JS from \"./js\"\nimport DOM from \"./dom\"\n\nconst HOOK_ID = \"hookId\"\n\nlet viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return DOM.private(el, HOOK_ID) }\n\n  constructor(view, el, callbacks){\n    this.el = el\n    this.__attachView(view)\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    DOM.putPrivate(this.el, HOOK_ID, this.constructor.makeID())\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __attachView(view){\n    if(view){\n      this.__view = () => view\n      this.liveSocket = view.liveSocket\n    } else {\n      this.__view = () => {\n        throw new Error(`hook not yet attached to a live view: ${this.el.outerHTML}`)\n      }\n      this.liveSocket = null\n    }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  /**\n   * Binds the hook to JS commands.\n   *\n   * @param {ViewHook} hook - The ViewHook instance to bind.\n   *\n   * @returns {Object} An object with methods to manipulate the DOM and execute JavaScript.\n   */\n  js(){\n    let hook = this\n\n    return {\n      /**\n       * Executes encoded JavaScript in the context of the hook element.\n       *\n       * @param {string} encodedJS - The encoded JavaScript string to execute.\n       */\n      exec(encodedJS){\n        hook.__view().liveSocket.execJS(hook.el, encodedJS, \"hook\")\n      },\n\n      /**\n       * Shows an element.\n       *\n       * @param {HTMLElement} el - The element to show.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.display] - The CSS display value to set. Defaults \"block\".\n       * @param {string} [opts.transition] - The CSS transition classes to set when showing.\n       * @param {number} [opts.time] - The transition duration in milliseconds. Defaults 200.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *  Defaults `true`.\n       */\n      show(el, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.show(\"hook\", owner, el, opts.display, opts.transition, opts.time, opts.blocking)\n      },\n\n      /**\n       * Hides an element.\n       *\n       * @param {HTMLElement} el - The element to hide.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition classes to set when hiding.\n       * @param {number} [opts.time] - The transition duration in milliseconds. Defaults 200.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      hide(el, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.hide(\"hook\", owner, el, null, opts.transition, opts.time, opts.blocking)\n      },\n\n      /**\n       * Toggles the visibility of an element.\n       *\n       * @param {HTMLElement} el - The element to toggle.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.display] - The CSS display value to set. Defaults \"block\".\n       * @param {string} [opts.in] - The CSS transition classes for showing.\n       *   Accepts either the string of classes to apply when toggling in, or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-0\", \"opacity-100\"]\n       *\n       * @param {string} [opts.out] - The CSS transition classes for hiding.\n       *   Accepts either string of classes to apply when toggling out, or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       *\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      toggle(el, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        opts.in = JS.transitionClasses(opts.in)\n        opts.out = JS.transitionClasses(opts.out)\n        JS.toggle(\"hook\", owner, el, opts.display, opts.in, opts.out, opts.time, opts.blocking)\n      },\n\n      /**\n       * Adds CSS classes to an element.\n       *\n       * @param {HTMLElement} el - The element to add classes to.\n       * @param {string|string[]} names - The class name(s) to add.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition property to set.\n       *   Accepts a string of classes to apply when adding classes or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-0\", \"opacity-100\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      addClass(el, names, opts = {}){\n        names = Array.isArray(names) ? names : names.split(\" \")\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.addOrRemoveClasses(el, names, [], opts.transition, opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Removes CSS classes from an element.\n       *\n       * @param {HTMLElement} el - The element to remove classes from.\n       * @param {string|string[]} names - The class name(s) to remove.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition classes to set.\n       *   Accepts a string of classes to apply when removing classes or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      removeClass(el, names, opts = {}){\n        opts.transition = JS.transitionClasses(opts.transition)\n        names = Array.isArray(names) ? names : names.split(\" \")\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.addOrRemoveClasses(el, [], names, opts.transition, opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Toggles CSS classes on an element.\n       *\n       * @param {HTMLElement} el - The element to toggle classes on.\n       * @param {string|string[]} names - The class name(s) to toggle.\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {string} [opts.transition] - The CSS transition classes to set.\n       *   Accepts a string of classes to apply when toggling classes or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      toggleClass(el, names, opts = {}){\n        opts.transition = JS.transitionClasses(opts.transition)\n        names = Array.isArray(names) ? names : names.split(\" \")\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.toggleClasses(el, names, opts.transition, opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Applies a CSS transition to an element.\n       *\n       * @param {HTMLElement} el - The element to apply the transition to.\n       * @param {string|string[]} transition - The transition class(es) to apply.\n       *   Accepts a string of classes to apply when transitioning or\n       *   a 3-tuple containing the transition class, the class to apply\n       *   to start the transition, and the ending transition class, such as:\n       *\n       *       [\"ease-out duration-300\", \"opacity-100\", \"opacity-0\"]\n       *\n       * @param {Object} [opts={}] - Optional settings.\n       * @param {number} [opts.time] - The transition duration in milliseconds.\n       * @param {boolean} [opts.blocking] - The boolean flag to block the UI during the transition.\n       *   Defaults `true`.\n       */\n      transition(el, transition, opts = {}){\n        let owner = hook.__view().liveSocket.owner(el)\n        JS.addOrRemoveClasses(el, [], [], JS.transitionClasses(transition), opts.time, owner, opts.blocking)\n      },\n\n      /**\n       * Sets an attribute on an element.\n       *\n       * @param {HTMLElement} el - The element to set the attribute on.\n       * @param {string} attr - The attribute name to set.\n       * @param {string} val - The value to set for the attribute.\n       */\n      setAttribute(el, attr, val){ JS.setOrRemoveAttrs(el, [[attr, val]], []) },\n\n      /**\n       * Removes an attribute from an element.\n       *\n       * @param {HTMLElement} el - The element to remove the attribute from.\n       * @param {string} attr - The attribute name to remove.\n       */\n      removeAttribute(el, attr){ JS.setOrRemoveAttrs(el, [], [attr]) },\n\n      /**\n       * Toggles an attribute on an element between two values.\n       *\n       * @param {HTMLElement} el - The element to toggle the attribute on.\n       * @param {string} attr - The attribute name to toggle.\n       * @param {string} val1 - The first value to toggle between.\n       * @param {string} val2 - The second value to toggle between.\n       */\n      toggleAttribute(el, attr, val1, val2){ JS.toggleAttr(el, attr, val1, val2) },\n    }\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view().pushHookEvent(this.el, null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view().withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(this.el, targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view().dispatchUploads(null, name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view().withinTargets(phxTarget, (view, targetCtx) => {\n      view.dispatchUploads(targetCtx, name, files)\n    })\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_LOADING_CLASS,\n  PHX_ERROR_CLASS,\n  PHX_CLIENT_ERROR_CLASS,\n  PHX_SERVER_ERROR_CLASS,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF_LOADING,\n  PHX_REF_SRC,\n  PHX_REF_LOCK,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_MAIN,\n  PHX_MOUNTED,\n  PUSH_TIMEOUT,\n  PHX_VIEWPORT_TOP,\n  PHX_VIEWPORT_BOTTOM,\n  MAX_CHILD_JOIN_ATTEMPTS\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport ElementRef from \"./element_ref\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\nimport JS from \"./js\"\n\nexport let prependFormDataKey = (key, prefix) => {\n  let isArray = key.endsWith(\"[]\")\n  // Remove the \"[]\" if it's an array\n  let baseKey = isArray ? key.slice(0, -2) : key\n  // Replace last occurrence of key before a closing bracket or the end with key plus suffix\n  baseKey = baseKey.replace(/([^\\[\\]]+)(\\]?$)/, `${prefix}$1$2`)\n  // Add back the \"[]\" if it was an array\n  if(isArray){ baseKey += \"[]\" }\n  return baseKey\n}\n\nlet serializeForm = (form, metadata, onlyNames = []) => {\n  const {submitter, ...meta} = metadata\n\n  // We must inject the submitter in the order that it exists in the DOM\n  // relative to other inputs. For example, for checkbox groups, the order must be maintained.\n  let injectedElement\n  if(submitter && submitter.name){\n    const input = document.createElement(\"input\")\n    input.type = \"hidden\"\n    // set the form attribute if the submitter has one;\n    // this can happen if the element is outside the actual form element\n    const formId = submitter.getAttribute(\"form\")\n    if(formId){\n      input.setAttribute(\"form\", formId)\n    }\n    input.name = submitter.name\n    input.value = submitter.value\n    submitter.parentElement.insertBefore(input, submitter)\n    injectedElement = input\n  }\n\n  const formData = new FormData(form)\n  const toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  const params = new URLSearchParams()\n\n  let elements = Array.from(form.elements)\n  for(let [key, val] of formData.entries()){\n    if(onlyNames.length === 0 || onlyNames.indexOf(key) >= 0){\n      let inputs = elements.filter(input => input.name === key)\n      let isUnused = !inputs.some(input => (DOM.private(input, PHX_HAS_FOCUSED) || DOM.private(input, PHX_HAS_SUBMITTED)))\n      let hidden = inputs.every(input => input.type === \"hidden\")\n      if(isUnused && !(submitter && submitter.name == key) && !hidden){\n        params.append(prependFormDataKey(key, \"_unused_\"), \"\")\n      }\n      params.append(key, val)\n    }\n  }\n\n  // remove the injected element again\n  // (it would be removed by the next dom patch anyway, but this is cleaner)\n  if(submitter && injectedElement){\n    submitter.parentElement.removeChild(injectedElement)\n  }\n\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  static closestView(el){\n    let liveViewEl = el.closest(PHX_VIEW_SELECTOR)\n    return liveViewEl ? DOM.private(liveViewEl, \"view\") : null\n  }\n\n  constructor(el, liveSocket, parentView, flash, liveReferer){\n    this.isDead = false\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    DOM.putPrivate(this.el, \"view\", this)\n    this.id = this.el.id\n    this.ref = 0\n    this.lastAckRef = null\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pendingForms = new Set()\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinAttempts = 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function(onDone){ onDone && onDone() }\n    this.stopCallback = function(){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.formsForRecovery = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      let url = this.href && this.expandURL(this.href)\n      return {\n        redirect: this.redirect ? url : undefined,\n        url: this.redirect ? undefined : url || undefined,\n        params: this.connectParams(liveReferer),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash,\n      }\n    })\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.el.hasAttribute(PHX_MAIN) }\n\n  connectParams(liveReferer){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n    params[\"_mount_attempts\"] = this.joinAttempts\n    params[\"_live_referer\"] = liveReferer\n    this.joinAttempts++\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_LOADING_CLASS,\n      PHX_ERROR_CLASS,\n      PHX_CLIENT_ERROR_CLASS,\n      PHX_SERVER_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_LOADING_CLASS)\n    }\n  }\n\n  execAll(binding){\n    DOM.all(this.el, `[${binding}]`, el => this.liveSocket.execJS(el, el.getAttribute(binding)))\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n    this.execAll(this.binding(\"connected\"))\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.liveSocket.transition(time, onStart, onDone)\n  }\n\n  // calls the callback with the view and target element for the given phxTarget\n  // targets can be:\n  //  * an element itself, then it is simply passed to liveSocket.owner;\n  //  * a CID (Component ID), then we first search the component's element in the DOM\n  //  * a selector, then we search the selector in the DOM and call the callback\n  //    for each element found with the corresponding owner view\n  withinTargets(phxTarget, callback, dom = document, viewEl){\n    // in the form recovery case we search in a template fragment instead of\n    // the real dom, therefore we optionally pass dom and viewEl\n\n    if(phxTarget instanceof HTMLElement || phxTarget instanceof SVGElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(isCid(phxTarget)){\n      let targets = DOM.findComponentNodeList(viewEl || this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, parseInt(phxTarget))\n      }\n    } else {\n      let targets = Array.from(dom.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    callback({diff, reply, events})\n    if(typeof title === \"string\"){ window.requestAnimationFrame(() => DOM.putTitle(title)) }\n  }\n\n  onJoin(resp){\n    let {rendered, container, liveview_version} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n    if(this.root === this){\n      this.formsForRecovery = this.getFormsForRecovery()\n    }\n    if(this.isMain()){\n      this.liveSocket.replaceRootHistory()\n    }\n\n    if(liveview_version !== this.liveSocket.version()){\n      console.error(`LiveView asset version mismatch. JavaScript version ${this.liveSocket.version()} vs. server ${liveview_version}. To avoid issues, please ensure that your assets use the same version as the server.`)\n    }\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let [html, streams] = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      this.joinCount++\n      this.joinAttempts = 0\n\n      this.maybeRecoverForms(html, () => {\n        this.onJoinComplete(resp, html, streams, events)\n      })\n    })\n  }\n\n  dropPendingRefs(){\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.refSrc()}\"]`, el => {\n      el.removeAttribute(PHX_REF_LOADING)\n      el.removeAttribute(PHX_REF_SRC)\n      el.removeAttribute(PHX_REF_LOCK)\n    })\n  }\n\n  onJoinComplete({live_patch}, html, streams, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, streams, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      // set PHX_ROOT_ID to prevent events from being dispatched to the root view\n      // while the child join is still pending\n      if(fromEl){ fromEl.setAttribute(PHX_ROOT_ID, this.root.id) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, streams, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, streams, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, streams, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  // this is invoked for dead and live views, so we must filter by\n  // by owner to ensure we aren't duplicating hooks across disconnect\n  // and connected states. This also handles cases where hooks exist\n  // in a root layout with a LV in the body\n  execNewMounted(parent = this.el){\n    let phxViewportTop = this.binding(PHX_VIEWPORT_TOP)\n    let phxViewportBottom = this.binding(PHX_VIEWPORT_BOTTOM)\n    DOM.all(parent, `[${phxViewportTop}], [${phxViewportBottom}]`, hookEl => {\n      if(this.ownsElement(hookEl)){\n        DOM.maintainPrivateHooks(hookEl, hookEl, phxViewportTop, phxViewportBottom)\n        this.maybeAddNewHook(hookEl)\n      }\n    })\n    DOM.all(parent, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      if(this.ownsElement(hookEl)){\n        this.maybeAddNewHook(hookEl)\n      }\n    })\n    DOM.all(parent, `[${this.binding(PHX_MOUNTED)}]`, el => {\n      if(this.ownsElement(el)){\n        this.maybeMounted(el)\n      }\n    })\n  }\n\n  applyJoinPatch(live_patch, html, streams, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, streams, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false, true)\n    this.joinNewChildren()\n    this.execNewMounted()\n\n    this.joinPending = false\n    this.liveSocket.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  maybeMounted(el){\n    let phxMounted = el.getAttribute(this.binding(PHX_MOUNTED))\n    let hasBeenInvoked = phxMounted && DOM.private(el, \"mounted\")\n    if(phxMounted && !hasBeenInvoked){\n      this.liveSocket.execJS(el, phxMounted)\n      DOM.putPrivate(el, \"mounted\", true)\n    }\n  }\n\n  maybeAddNewHook(el){\n    let newHook = this.addHook(el)\n    if(newHook){ newHook.__mounted() }\n  }\n\n  performPatch(patch, pruneCids, isJoinPatch = false){\n    let removedEls = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    this.liveSocket.triggerDOM(\"onPatchStart\", [patch.targetContainer])\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n      let phxViewportTop = this.binding(PHX_VIEWPORT_TOP)\n      let phxViewportBottom = this.binding(PHX_VIEWPORT_BOTTOM)\n      DOM.maintainPrivateHooks(el, el, phxViewportTop, phxViewportBottom)\n      this.maybeAddNewHook(el)\n      if(el.getAttribute){ this.maybeMounted(el) }\n    })\n\n    patch.after(\"phxChildAdded\", el => {\n      if(DOM.isPhxSticky(el)){\n        this.liveSocket.joinRootViews()\n      } else {\n        phxChildrenAdded = true\n      }\n    })\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      if(el.nodeType === Node.ELEMENT_NODE){ removedEls.push(el) }\n    })\n\n    patch.after(\"transitionsDiscarded\", els => this.afterElementsRemoved(els, pruneCids))\n    patch.perform(isJoinPatch)\n    this.afterElementsRemoved(removedEls, pruneCids)\n\n    this.liveSocket.triggerDOM(\"onPatchEnd\", [patch.targetContainer])\n    return phxChildrenAdded\n  }\n\n  afterElementsRemoved(elements, pruneCids){\n    let destroyedCIDs = []\n    elements.forEach(parent => {\n      let components = DOM.all(parent, `[${PHX_COMPONENT}]`)\n      let hooks = DOM.all(parent, `[${this.binding(PHX_HOOK)}], [data-phx-hook]`)\n      components.concat(parent).forEach(el => {\n        let cid = this.componentID(el)\n        if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      })\n      hooks.concat(parent).forEach(hookEl => {\n        let hook = this.getHook(hookEl)\n        hook && this.destroyHook(hook)\n      })\n    })\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  maybeRecoverForms(html, callback){\n    const phxChange = this.binding(\"change\")\n    const oldForms = this.root.formsForRecovery\n    // So why do we create a template element here?\n    // One way to recover forms would be to immediately apply the mount\n    // patch and then afterwards recover the forms. However, this would\n    // cause a flicker, because the mount patch would remove the form content\n    // until it is restored. Therefore LV decided to do form recovery with the\n    // raw HTML before it is applied and delay the mount patch until the form\n    // recovery events are done.\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    // because we work with a template element, we must manually copy the attributes\n    // otherwise the owner / target helpers don't work properly\n    const rootEl = template.content.firstElementChild\n    rootEl.id = this.id\n    rootEl.setAttribute(PHX_ROOT_ID, this.root.id)\n    rootEl.setAttribute(PHX_SESSION, this.getSession())\n    rootEl.setAttribute(PHX_STATIC, this.getStatic())\n    rootEl.setAttribute(PHX_PARENT_ID, this.parent ? this.parent.id : null)\n\n    // we go over all form elements in the new HTML for the LV\n    // and look for old forms in the `formsForRecovery` object;\n    // the formsForRecovery can also contain forms from child views\n    const formsToRecover =\n      // we go over all forms in the new DOM; because this is only the HTML for the current\n      // view, we can be sure that all forms are owned by this view:\n      DOM.all(template.content, \"form\")\n        // only recover forms that have an id and are in the old DOM\n        .filter(newForm => newForm.id && oldForms[newForm.id])\n        // abandon forms we already tried to recover to prevent looping a failed state\n        .filter(newForm => !this.pendingForms.has(newForm.id))\n        // only recover if the form has the same phx-change value\n        .filter(newForm => oldForms[newForm.id].getAttribute(phxChange) === newForm.getAttribute(phxChange))\n        .map(newForm => {\n          return [oldForms[newForm.id], newForm]\n        })\n\n    if(formsToRecover.length === 0){\n      return callback()\n    }\n\n    formsToRecover.forEach(([oldForm, newForm], i) => {\n      this.pendingForms.add(newForm.id)\n      // it is important to use the firstElementChild of the template content\n      // because when traversing a documentFragment using parentNode, we won't ever arrive at\n      // the fragment; as the template is always a LiveView, we can be sure that there is only\n      // one child on the root level\n      this.pushFormRecovery(oldForm, newForm, template.content.firstElementChild, () => {\n        this.pendingForms.delete(newForm.id)\n        // we only call the callback once all forms have been recovered\n        if(i === formsToRecover.length - 1){\n          callback()\n        }\n      })\n    })\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)]?.[el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    // we can clear pending form recoveries now that we've joined.\n    // They either all resolved or were abandoned\n    this.pendingForms.clear()\n    // we can also clear the formsForRecovery object to not keep old form elements around\n    this.formsForRecovery = {}\n    this.joinCallback(() => {\n      this.pendingJoinOps.forEach(([view, op]) => {\n        if(!view.isDestroyed()){ op() }\n      })\n      this.pendingJoinOps = []\n    })\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || (this.liveSocket.hasPendingLink() && this.root.isMain())){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findExistingParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let [html, streams] = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, streams, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.liveSocket.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff) : null\n      let [html, streams] = this.rendered.toString(cids)\n      return [`<${tag}>${html}</${tag}>`, streams]\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let [html, streams] = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, streams, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    let hookElId = ViewHook.elementID(el)\n\n    if(hookElId && !this.viewHooks[hookElId]){\n      // hook created, but not attached (createHook for web component)\n      let hook = DOM.getCustomElHook(el) || logError(`no hook found for custom element: ${el.id}`)\n      this.viewHooks[hookElId] = hook\n      hook.__attachView(this)\n      return hook\n    }\n    else if(hookElId || !el.getAttribute){\n      // no hook found\n      return\n    } else {\n      // new hook found with phx-hook attribute\n      let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n      if(hookName && !this.ownsElement(el)){ return }\n      let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n      if(callbacks){\n        if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n        let hook = new ViewHook(this, el, callbacks)\n        this.viewHooks[ViewHook.elementID(hook.el)] = hook\n        return hook\n      } else if(hookName !== null){\n        logError(`unknown hook found for \"${hookName}\"`, el)\n      }\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n    this.eachChild(child => child.applyPendingUpdates())\n  }\n\n  eachChild(callback){\n    let children = this.root.children[this.id] || {}\n    for(let id in children){ callback(this.getChildById(id)) }\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        this.liveSocket.requestDOMUpdate(() => cb(resp))\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.liveSocket.requestDOMUpdate(() => {\n        this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n      })\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){ this.eachChild(child => child.destroy()) }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    let e = new CustomEvent(\"phx:server-navigate\", {detail: {to, kind, flash}})\n    this.liveSocket.historyRedirect(e, url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash, reloadToken}){ this.liveSocket.redirect(to, flash, reloadToken) }\n\n  isDestroyed(){ return this.destroyed }\n\n  joinDead(){ this.isDead = true }\n\n  joinPush(){\n    this.joinPush = this.joinPush || this.channel.join()\n    return this.joinPush\n  }\n\n  join(callback){\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n    if(this.isMain()){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = (onDone) => {\n      onDone = onDone || function(){}\n      callback ? callback(this.joinCount, onDone) : onDone()\n    }\n\n    this.wrapPush(() => this.channel.join(), {\n      ok: (resp) => this.liveSocket.requestDOMUpdate(() => this.onJoin(resp)),\n      error: (error) => this.onJoinError(error),\n      timeout: () => this.onJoinError({reason: \"timeout\"})\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"reload\"){\n      this.log(\"error\", () => [`failed mount with ${resp.status}. Falling back to page reload`, resp])\n      this.onRedirect({to: this.root.href, reloadToken: resp.token})\n      return\n    } else if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      this.onRedirect({to: this.root.href})\n      return\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    if(this.isMain()){\n      this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n      if(this.liveSocket.isConnected()){ this.liveSocket.reloadWithJitter(this) }\n    } else {\n      if(this.joinAttempts >= MAX_CHILD_JOIN_ATTEMPTS){\n        // put the root review into permanent error state, but don't destroy it as it can remain active\n        this.root.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n        this.log(\"error\", () => [`giving up trying to mount after ${MAX_CHILD_JOIN_ATTEMPTS} tries`, resp])\n        this.destroy()\n      }\n      let trueChildEl = DOM.byId(this.el.id)\n      if(trueChildEl){\n        DOM.mergeAttrs(trueChildEl, this.el)\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n        this.el = trueChildEl\n      } else {\n        this.destroy()\n      }\n    }\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if(this.isMain() && this.liveSocket.hasPendingLink() && reason !== \"leave\"){\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    if(this.liveSocket.isConnected()){ this.log(\"error\", () => [\"view crashed\", reason]) }\n    if(!this.liveSocket.isUnloaded()){\n      if(this.liveSocket.isConnected()){\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n      } else {\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_CLIENT_ERROR_CLASS])\n      }\n    }\n  }\n\n  displayError(classes){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: {to: this.href, kind: \"error\"}}) }\n    this.showLoader()\n    this.setContainerClasses(...classes)\n    this.execAll(this.binding(\"disconnected\"))\n  }\n\n  wrapPush(callerPush, receives){\n    let latency = this.liveSocket.getLatencySim()\n    let withLatency = latency ?\n      (cb) => setTimeout(() => !this.isDestroyed() && cb(), latency) :\n      (cb) => !this.isDestroyed() && cb()\n\n    withLatency(() => {\n      callerPush()\n        .receive(\"ok\", resp => withLatency(() => receives.ok && receives.ok(resp)))\n        .receive(\"error\", reason => withLatency(() => receives.error && receives.error(reason)))\n        .receive(\"timeout\", () => withLatency(() => receives.timeout && receives.timeout()))\n    })\n  }\n\n  pushWithReply(refGenerator, event, payload){\n    if(!this.isConnected()){ return Promise.reject({error: \"noconnection\"}) }\n\n    let [ref, [el], opts] = refGenerator ? refGenerator() : [null, [], {}]\n    let oldJoinCount = this.joinCount\n    let onLoadingDone = function(){}\n    if(opts.page_loading){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n\n    return new Promise((resolve, reject) => {\n      this.wrapPush(() => this.channel.push(event, payload, PUSH_TIMEOUT), {\n        ok: (resp) => {\n          if(ref !== null){ this.lastAckRef = ref }\n          let finish = (hookReply) => {\n            if(resp.redirect){ this.onRedirect(resp.redirect) }\n            if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n            if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n            onLoadingDone()\n            resolve({resp: resp, reply: hookReply})\n          }\n          if(resp.diff){\n            this.liveSocket.requestDOMUpdate(() => {\n              this.applyDiff(\"update\", resp.diff, ({diff, reply, events}) => {\n                if(ref !== null){\n                  this.undoRefs(ref, payload.event)\n                }\n                this.update(diff, events)\n                finish(reply)\n              })\n            })\n          } else {\n            if(ref !== null){ this.undoRefs(ref, payload.event) }\n            finish(null)\n          }\n        },\n        error: (reason) => reject({error: reason}),\n        timeout: () => {\n          reject({timeout: true})\n          if(this.joinCount === oldJoinCount){\n            this.liveSocket.reloadWithJitter(this, () => {\n              this.log(\"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        }\n      })\n    })\n  }\n\n  undoRefs(ref, phxEvent, onlyEls){\n    if(!this.isConnected()){ return } // exit if external form triggered\n    let selector = `[${PHX_REF_SRC}=\"${this.refSrc()}\"]`\n\n    if(onlyEls){\n      onlyEls = new Set(onlyEls)\n      DOM.all(document, selector, parent => {\n        if(onlyEls && !onlyEls.has(parent)){ return }\n        // undo any child refs within parent first\n        DOM.all(parent, selector, child => this.undoElRef(child, ref, phxEvent))\n        this.undoElRef(parent, ref, phxEvent)\n      })\n    } else {\n      DOM.all(document, selector, el => this.undoElRef(el, ref, phxEvent))\n    }\n  }\n\n  undoElRef(el, ref, phxEvent){\n    let elRef = new ElementRef(el)\n\n    elRef.maybeUndo(ref, phxEvent, clonedTree => {\n      let hook = this.triggerBeforeUpdateHook(el, clonedTree)\n      DOMPatch.patchWithClonedTree(el, clonedTree, this.liveSocket)\n      DOM.all(el, `[${PHX_REF_SRC}=\"${this.refSrc()}\"]`, child => this.undoElRef(child, ref, phxEvent))\n      this.execNewMounted(el)\n      if(hook){ hook.__updated() }\n    })\n  }\n\n  refSrc(){ return this.el.id }\n\n  putRef(elements, phxEvent, eventType, opts = {}){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n    if(opts.loading){\n      let loadingEls = DOM.all(document, opts.loading).map(el => {\n        return {el, lock: true, loading: true}\n      })\n      elements = elements.concat(loadingEls)\n    }\n\n    for(let {el, lock, loading} of elements){\n      if(!lock && !loading){ throw new Error(\"putRef requires lock or loading\") }\n      el.setAttribute(PHX_REF_SRC, this.refSrc())\n      if(loading){ el.setAttribute(PHX_REF_LOADING, newRef) }\n      if(lock){ el.setAttribute(PHX_REF_LOCK, newRef) }\n\n      if(!loading || (opts.submitter && !(el === opts.submitter || el === opts.form))){ continue }\n\n      let lockCompletePromise = new Promise(resolve => {\n        el.addEventListener(`phx:undo-lock:${newRef}`, () => resolve(detail), {once: true})\n      })\n\n      let loadingCompletePromise = new Promise(resolve => {\n        el.addEventListener(`phx:undo-loading:${newRef}`, () => resolve(detail), {once: true})\n      })\n\n      el.classList.add(`phx-${eventType}-loading`)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        if(disableText !== \"\"){ el.innerText = disableText }\n        // PHX_DISABLED could have already been set in disableForm\n        el.setAttribute(PHX_DISABLED, el.getAttribute(PHX_DISABLED) || el.disabled)\n        el.setAttribute(\"disabled\", \"\")\n      }\n\n      let detail = {\n        event: phxEvent,\n        eventType: eventType,\n        ref: newRef,\n        isLoading: loading,\n        isLocked: lock,\n        lockElements: elements.filter(({lock}) => lock).map(({el}) => el),\n        loadingElements: elements.filter(({loading}) => loading).map(({el}) => el),\n        unlock: (els) => {\n          els = Array.isArray(els) ? els : [els]\n          this.undoRefs(newRef, phxEvent, els)\n        },\n        lockComplete: lockCompletePromise,\n        loadingComplete: loadingCompletePromise,\n        lock: (lockEl) => {\n          return new Promise(resolve => {\n            if(this.isAcked(newRef)){ return resolve(detail) }\n            lockEl.setAttribute(PHX_REF_LOCK, newRef)\n            lockEl.setAttribute(PHX_REF_SRC, this.refSrc())\n            lockEl.addEventListener(`phx:lock-stop:${newRef}`, () => resolve(detail), {once: true})\n          })\n        }\n      }\n      el.dispatchEvent(new CustomEvent(`phx:push`, {\n        detail: detail,\n        bubbles: true,\n        cancelable: false\n      }))\n      if(phxEvent){\n        el.dispatchEvent(new CustomEvent(`phx:push:${phxEvent}`, {\n          detail: detail,\n          bubbles: true,\n          cancelable: false\n        }))\n      }\n    }\n    return [newRef, elements.map(({el}) => el), opts]\n  }\n\n  isAcked(ref){ return this.lastAckRef !== null && this.lastAckRef >= ref }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx, opts = {}){\n    if(isCid(targetCtx)){ return targetCtx }\n\n    let cidOrSelector = opts.target || target.getAttribute(this.binding(\"target\"))\n    if(isCid(cidOrSelector)){\n      return parseInt(cidOrSelector)\n    } else if(targetCtx && (cidOrSelector !== null || opts.target)){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(isCid(targetCtx)){\n      return targetCtx\n    } else if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(el, targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els, opts] = this.putRef([{el, loading: true, lock: true}], event, \"hook\")\n    this.pushWithReply(() => [ref, els, opts], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }).then(({resp: _resp, reply: hookReply}) => onReply(hookReply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta, value){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      if(!meta){ meta = {} }\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined && !(el instanceof HTMLFormElement)){\n      if(!meta){ meta = {} }\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    if(value){\n      if(!meta){ meta = {} }\n      for(let key in value){ meta[key] = value[key] }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta, opts = {}, onReply){\n    this.pushWithReply(() => this.putRef([{el, loading: true, lock: true}], phxEvent, type, opts), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta, opts.value),\n      cid: this.targetComponentID(el, targetCtx, opts)\n    }).then(({resp, reply}) => onReply && onReply(reply))\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }).then(({resp}) => onReply(resp))\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, opts, callback){\n    if(!inputEl.form){\n      throw new Error(\"form events require the input to be inside a form\")\n    }\n\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx, opts)\n    let refGenerator = () => {\n      return this.putRef([\n        {el: inputEl, loading: true, lock: true},\n        {el: inputEl.form, loading: true, lock: true}\n      ], phxEvent, \"change\", opts)\n    }\n    let formData\n    let meta  = this.extractMeta(inputEl.form)\n    if(inputEl instanceof HTMLButtonElement){ meta.submitter = inputEl }\n    if(inputEl.getAttribute(this.binding(\"change\"))){\n      formData = serializeForm(inputEl.form, {_target: opts._target, ...meta}, [inputEl.name])\n    } else {\n      formData = serializeForm(inputEl.form, {_target: opts._target, ...meta})\n    }\n    if(DOM.isUploadInput(inputEl) && inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event).then(({resp}) => {\n      if(DOM.isUploadInput(inputEl) && DOM.isAutoUpload(inputEl)){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.undoRefs(ref, phxEvent, [inputEl.form])\n          this.uploadFiles(inputEl.form, phxEvent, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form, phxEvent)\n            this.undoRefs(ref, phxEvent)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl, phxEvent){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, _opts, callback] = awaitingSubmit\n      this.cancelSubmit(formEl, phxEvent)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _ref, _opts, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, opts, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, opts, callback])\n  }\n\n  cancelSubmit(formEl, phxEvent){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref, phxEvent)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  disableForm(formEl, phxEvent, opts = {}){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let formElements = Array.from(formEl.elements)\n    let disables = formElements.filter(filterDisables)\n    let buttons = formElements.filter(filterButton).filter(filterIgnored)\n    let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n    buttons.forEach(button => {\n      button.setAttribute(PHX_DISABLED, button.disabled)\n      button.disabled = true\n    })\n    inputs.forEach(input => {\n      input.setAttribute(PHX_READONLY, input.readOnly)\n      input.readOnly = true\n      if(input.files){\n        input.setAttribute(PHX_DISABLED, input.disabled)\n        input.disabled = true\n      }\n    })\n    let formEls = disables.concat(buttons).concat(inputs).map(el => {\n      return {el, loading: true, lock: true}\n    })\n\n    // we reverse the order so form children are already locked by the time\n    // the form is locked\n    let els = [{el: formEl, loading: true, lock: false}].concat(formEls).reverse()\n    return this.putRef(els, phxEvent, \"submit\", opts)\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, submitter, opts, onReply){\n    let refGenerator = () => this.disableForm(formEl, phxEvent, {\n      ...opts,\n      form: formEl,\n      submitter: submitter\n    })\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      let push = () => this.pushFormSubmit(formEl, targetCtx, phxEvent, submitter, opts, onReply)\n      return this.scheduleSubmit(formEl, ref, opts, push)\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els, opts]\n      this.uploadFiles(formEl, phxEvent, targetCtx, ref, cid, (uploads) => {\n        // if we still having pending preflights it means we have invalid entries\n        // and the phx-submit cannot be completed\n        if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n          return this.undoRefs(ref, phxEvent)\n        }\n        let meta = this.extractMeta(formEl)\n        let formData = serializeForm(formEl, {submitter, ...meta})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }).then(({resp}) => onReply(resp))\n      })\n    } else if(!(formEl.hasAttribute(PHX_REF_SRC) && formEl.classList.contains(\"phx-submit-loading\"))){\n      let meta = this.extractMeta(formEl)\n      let formData = serializeForm(formEl, {submitter, ...meta})\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }).then(({resp}) => onReply(resp))\n    }\n  }\n\n  uploadFiles(formEl, phxEvent, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      });\n\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      if(entries.length === 0) {\n        numFileInputsInProgress--\n        return\n      }\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload).then(({resp}) => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        // the preflight will reject entries beyond the max entries\n        // so we error and cancel entries on the client that are missing from the response\n        uploader.entries().forEach(entry => {\n          if(resp.entries && !resp.entries[entry.ref]){\n            this.handleFailedEntryPreflight(entry.ref, \"failed preflight\", uploader)\n          }\n        })\n        // for auto uploads, we may have an empty entries response from the server\n        // for form submits that contain invalid entries\n        if(resp.error || Object.keys(resp.entries).length === 0){\n          this.undoRefs(ref, phxEvent)\n          let errors = resp.error || []\n          errors.map(([entry_ref, reason]) => {\n            this.handleFailedEntryPreflight(entry_ref, reason, uploader)\n          })\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  handleFailedEntryPreflight(uploadRef, reason, uploader){\n    if(uploader.isAutoUpload()){\n      // uploadRef may be top level upload config ref or entry ref\n      let entry = uploader.entries().find(entry => entry.ref === uploadRef.toString())\n      if(entry){ entry.cancel() }\n    } else {\n      uploader.entries().map(entry => entry.cancel())\n    }\n    this.log(\"upload\", () => [`error for entry ${uploadRef}`, reason])\n  }\n\n  dispatchUploads(targetCtx, name, filesOrBlobs){\n    let targetElement = this.targetCtxElement(targetCtx) || this.el\n    let inputs = DOM.findUploadInputs(targetElement).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {detail: {files: filesOrBlobs}}) }\n  }\n\n  targetCtxElement(targetCtx) {\n    if(isCid(targetCtx)){\n      let [target] = DOM.findComponentNodeList(this.el, targetCtx)\n      return target\n    } else if(targetCtx) {\n      return targetCtx\n    } else {\n      return null\n    }\n  }\n\n  pushFormRecovery(oldForm, newForm, templateDom, callback){\n    // we are only recovering forms inside the current view, therefore it is safe to\n    // skip withinOwners here and always use this when referring to the view\n    const phxChange = this.binding(\"change\")\n    const phxTarget = newForm.getAttribute(this.binding(\"target\")) || newForm\n    const phxEvent = newForm.getAttribute(this.binding(PHX_AUTO_RECOVER)) || newForm.getAttribute(this.binding(\"change\"))\n    const inputs = Array.from(oldForm.elements).filter(el => DOM.isFormInput(el) && el.name && !el.hasAttribute(phxChange))\n    if(inputs.length === 0){ return }\n\n    // we must clear tracked uploads before recovery as they no longer have valid refs\n    inputs.forEach(input => input.hasAttribute(PHX_UPLOAD_REF) && LiveUploader.clearFiles(input))\n    // pushInput assumes that there is a source element that initiated the change;\n    // because this is not the case when we recover forms, we provide the first input we find\n    let input = inputs.find(el => el.type !== \"hidden\") || inputs[0]\n\n    // in the case that there are multiple targets, we count the number of pending recovery events\n    // and only call the callback once all events have been processed\n    let pending = 0\n    // withinTargets(phxTarget, callback, dom, viewEl)\n    this.withinTargets(phxTarget, (targetView, targetCtx) => {\n      const cid = this.targetComponentID(newForm, targetCtx)\n      pending++\n      targetView.pushInput(input, targetCtx, cid, phxEvent, {_target: input.name}, () => {\n        pending--\n        if(pending === 0){ callback() }\n      })\n    }, templateDom, templateDom)\n  }\n\n  pushLinkPatch(e, href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    // only add loading states if event is trusted (it was triggered by user, such as click) and\n    // it's not a forward/back navigation from popstate\n    let loading = e.isTrusted && e.type !== \"popstate\"\n    let refGen = targetEl ? () => this.putRef([{el: targetEl, loading: loading, lock: true}], null, \"click\") : null\n    let fallback = () => this.liveSocket.redirect(window.location.href)\n    let url = href.startsWith(\"/\") ? `${location.protocol}//${location.host}${href}` : href\n\n    this.pushWithReply(refGen, \"live_patch\", {url}).then(\n      ({resp}) => {\n        this.liveSocket.requestDOMUpdate(() => {\n          if(resp.link_redirect){\n            this.liveSocket.replaceMain(href, null, callback, linkRef)\n          } else {\n            if(this.liveSocket.commitPendingLink(linkRef)){\n              this.href = href\n            }\n            this.applyPendingUpdates()\n            callback && callback(linkRef)\n          }\n        })\n      },\n      ({error: _error, timeout: _timeout}) => fallback()\n    )\n  }\n\n  getFormsForRecovery(){\n    if(this.joinCount === 0){ return {} }\n\n    let phxChange = this.binding(\"change\")\n\n    return DOM.all(this.el, `form[${phxChange}]`)\n      .filter(form => form.id)\n      .filter(form => form.elements.length > 0)\n      .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n      .map(form => form.cloneNode(true))\n      .reduce((acc, form) => {\n        acc[form.id] = form\n        return acc\n      }, {})\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n\n    if(willDestroyCIDs.length > 0){\n      // we must reset the render change tracking for cids that\n      // could be added back from the server so we don't skip them\n      willDestroyCIDs.forEach(cid => this.rendered.resetRender(cid))\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}).then(() => {\n        // we must wait for pending transitions to complete before determining\n        // if the cids were added back to the DOM in the meantime (#3139)\n        this.liveSocket.requestDOMUpdate(() => {\n          // See if any of the cids we wanted to destroy were added back,\n          // if they were added back, we don't actually destroy them.\n          let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n            return DOM.findComponentNodeList(this.el, cid).length === 0\n          })\n\n          if(completelyDestroyCIDs.length > 0){\n            this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}).then(({resp}) => {\n              this.rendered.pruneCIDs(resp.cids)\n            })\n          }\n        })\n      })\n    }\n  }\n\n  ownsElement(el){\n    let parentViewEl = el.closest(PHX_VIEW_SELECTOR)\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      (parentViewEl && parentViewEl.id === this.id) ||\n      (!parentViewEl && this.isDead)\n  }\n\n  submitForm(form, targetCtx, phxEvent, submitter, opts = {}){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    const inputs = Array.from(form.elements)\n    inputs.forEach(input => DOM.putPrivate(input, PHX_HAS_SUBMITTED, true))\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, submitter, opts, () => {\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {integer} [opts.maxReloads] - The maximum reloads before entering failsafe mode.\n * @param {integer} [opts.reloadJitterMin] - The minimum time between normal reload attempts.\n * @param {integer} [opts.reloadJitterMax] - The maximum time between normal reload attempts.\n * @param {integer} [opts.failsafeJitter] - The time between reload attempts in failsafe mode.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  PHX_SESSION,\n  RELOAD_JITTER_MIN,\n  RELOAD_JITTER_MAX,\n  PHX_REF_SRC,\n  PHX_RELOAD_STATUS\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport JS from \"./js\"\n\nexport let isUsedInput = (el) => DOM.isUsedInput(el)\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import {LiveSocket} from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.outgoingMainEl = null\n    this.clickStartedAtTarget = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.reloadWithJitterTimer = null\n    this.maxReloads = opts.maxReloads || MAX_RELOADS\n    this.reloadJitterMin = opts.reloadJitterMin || RELOAD_JITTER_MIN\n    this.reloadJitterMax = opts.reloadJitterMax || RELOAD_JITTER_MAX\n    this.failsafeJitter = opts.failsafeJitter || FAILSAFE_JITTER\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.boundEventNames = new Set()\n    this.serverCloseRef = null\n    this.domCallbacks = Object.assign({\n      jsQuerySelectorAll: null,\n      onPatchStart: closure(),\n      onPatchEnd: closure(),\n      onNodeAdded: closure(),\n      onBeforeElUpdated: closure()},\n    opts.dom || {})\n    this.transitions = new TransitionSet()\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  version(){ return LV_VSN }\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  isDebugDisabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"false\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"false\") }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    // enable debug by default if on localhost and not explicitly disabled\n    if(window.location.hostname === \"localhost\" && !this.isDebugDisabled()){ this.enableDebug() }\n    let doConnect = () => {\n      this.resetReloadStatus()\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      } else if(this.main){\n        this.socket.connect()\n      } else {\n        this.bindTopLevelEvents({dead: true})\n      }\n      this.joinDeadView()\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){\n    clearTimeout(this.reloadWithJitterTimer)\n    // remove the socket close listener to avoid trying to handle\n    // a server close event when it is actually caused by us disconnecting\n    if(this.serverCloseRef){\n      this.socket.off(this.serverCloseRef)\n      this.serverCloseRef = null\n    }\n    this.socket.disconnect(callback)\n  }\n\n  replaceTransport(transport){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.socket.replaceTransport(transport)\n    this.connect()\n  }\n\n  execJS(el, encodedJS, eventType = null){\n    let e = new CustomEvent(\"phx:exec\", {detail: {sourceElement: el}})\n    this.owner(el, view => JS.exec(e, eventType, encodedJS, view, el))\n  }\n\n  // private\n\n  execJSHookPush(el, phxEvent, data, callback){\n    this.withinOwners(el, view => {\n      let e = new CustomEvent(\"phx:exec\", {detail: {sourceElement: el}})\n      JS.exec(e, \"hook\", phxEvent, view, el, [\"push\", {data, callback}])\n    })\n  }\n\n  unload(){\n    if(this.unloaded){ return }\n    if(this.main && this.isConnected()){ this.log(this.main, \"socket\", () => [\"disconnect for page nav\"]) }\n    this.unloaded = true\n    this.destroyAllViews()\n    this.disconnect()\n  }\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  requestDOMUpdate(callback){\n    this.transitions.after(callback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.transitions.addTransition(time, onStart, onDone)\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  reloadWithJitter(view, log){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.disconnect()\n    let minMs = this.reloadJitterMin\n    let maxMs = this.reloadJitterMax\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    if(tries >= this.maxReloads){\n      afterMs = this.failsafeJitter\n    }\n    this.reloadWithJitterTimer = setTimeout(() => {\n      // if view has recovered, such as transport replaced, then cancel\n      if(view.isDestroyed() || view.isConnected()){ return }\n      view.destroy()\n      log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n      if(tries >= this.maxReloads){\n        this.log(view, \"join\", () => [`exceeded ${this.maxReloads} consecutive reloads. Entering failsafe mode`])\n      }\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinDeadView(){\n    let body = document.body\n    if(body && !this.isPhxView(body) && !this.isPhxView(document.firstElementChild)){\n      let view = this.newRootView(body)\n      view.setHref(this.getHref())\n      view.joinDead()\n      if(!this.main){ this.main = view }\n      window.requestAnimationFrame(() => view.execNewMounted())\n    }\n  }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.hasAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash, reloadToken){\n    if(reloadToken){ Browser.setCookie(PHX_RELOAD_STATUS, reloadToken, 60) }\n    this.unload()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let liveReferer = this.currentLocation.href\n    this.outgoingMainEl = this.outgoingMainEl || this.main.el\n    let removeEls = DOM.all(this.outgoingMainEl, `[${this.binding(\"remove\")}]`)\n    let newMainEl = DOM.cloneNode(this.outgoingMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash, liveReferer)\n    this.main.setRedirect(href)\n    this.transitionRemoves(removeEls, true)\n    this.main.join((joinCount, onDone) => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        this.requestDOMUpdate(() => {\n          // remove phx-remove els right before we replace the main element\n          removeEls.forEach(el => el.remove())\n          DOM.findPhxSticky(document).forEach(el => newMainEl.appendChild(el))\n          this.outgoingMainEl.replaceWith(newMainEl)\n          this.outgoingMainEl = null\n          callback && callback(linkRef)\n          onDone()\n        })\n      }\n    })\n  }\n\n  transitionRemoves(elements, skipSticky, callback){\n    let removeAttr = this.binding(\"remove\")\n    if(skipSticky){\n      const stickies = DOM.findPhxSticky(document) || []\n      elements = elements.filter(el => !DOM.isChildOfAny(el, stickies))\n    }\n    let silenceEvents = (e) => {\n      e.preventDefault()\n      e.stopImmediatePropagation()\n    }\n    elements.forEach(el => {\n      // prevent all listeners we care about from bubbling to window\n      // since we are removing the element\n      for(let event of this.boundEventNames){\n        el.addEventListener(event, silenceEvents, true)\n      }\n      this.execJS(el, el.getAttribute(removeAttr), \"remove\")\n    })\n    // remove the silenced listeners when transitions are done incase the element is re-used\n    // and call caller's callback as soon as we are done with transitions\n    this.requestDOMUpdate(() => {\n      elements.forEach(el => {\n        for(let event of this.boundEventNames){\n          el.removeEventListener(event, silenceEvents, true)\n        }\n      })\n      callback && callback()\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash, liveReferer){\n    let view = new View(el, this, null, flash, liveReferer)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el)) || this.main\n    return view && callback ? callback(view) : view\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => callback(view, childEl))\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n    this.main = null\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root && root.id === el.id){\n      root.destroy()\n      delete this.roots[root.id]\n    } else if(root){\n      root.destroyDescendent(el.id)\n    }\n  }\n\n  getActiveElement(){\n    return document.activeElement\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents({dead} = {}){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    // enter failsafe reload if server has gone away intentionally, such as \"disconnect\" broadcast\n    this.serverCloseRef = this.socket.onClose(event => {\n      // failsafe reload if normal closure and we still have a main LV\n      if(event && event.code === 1000 && this.main){ return this.reloadWithJitter(this.main) }\n    })\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    if(!dead){ this.bindNav() }\n    this.bindClicks()\n    if(!dead){ this.bindForms() }\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      let matchKey = targetEl.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n      JS.exec(e, type, phxEvent, view, targetEl, [\"push\", {data}])\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      if(!phxTarget){\n        let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n        JS.exec(e, type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget === \"window\"){\n        let data = this.eventMeta(type, e, targetEl)\n        JS.exec(e, type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.on(\"dragover\", e => e.preventDefault())\n    this.on(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files, e.dataTransfer)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    this.resetReloadStatus()\n    return this.linkRef\n  }\n\n  // anytime we are navigating or connecting, drop reload cookie in case\n  // we issue the cookie but the next request was interrupted and the server never dropped it\n  resetReloadStatus(){ Browser.deleteCookie(PHX_RELOAD_STATUS) }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, browserEventName, () => {\n            this.withinOwners(e.target, view => {\n              callback(e, event, view, e.target, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, browserEventName, () => {\n              this.withinOwners(el, view => {\n                callback(e, event, view, el, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    this.on(\"mousedown\", e => this.clickStartedAtTarget = e.target)\n    this.bindClick(\"click\", \"click\")\n  }\n\n  bindClick(eventName, bindingName){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      let target = null\n      // a synthetic click event (detail 0) will not have caused a mousedown event,\n      // therefore the clickStartedAtTarget is stale\n      if(e.detail === 0) this.clickStartedAtTarget = e.target\n      let clickStartedAtTarget = this.clickStartedAtTarget || e.target\n      // when searching the target for the click event, we always want to\n      // use the actual event target, see #3372\n      target = closestPhxBinding(e.target, click)\n      this.dispatchClickAway(e, clickStartedAtTarget)\n      this.clickStartedAtTarget = null\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){\n        if(DOM.isNewPageClick(e, window.location)){ this.unload() }\n        return\n      }\n\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      // noop if we are in the middle of awaiting an ack for this el already\n      if(target.hasAttribute(PHX_REF_SRC)){ return }\n\n      this.debounce(target, e, \"click\", () => {\n        this.withinOwners(target, view => {\n          JS.exec(e, \"click\", phxEvent, view, target, [\"push\", {data: this.eventMeta(\"click\", e, target)}])\n        })\n      })\n    }, false)\n  }\n\n  dispatchClickAway(e, clickStartedAt){\n    let phxClickAway = this.binding(\"click-away\")\n    DOM.all(document, `[${phxClickAway}]`, el => {\n      if(!(el.isSameNode(clickStartedAt) || el.contains(clickStartedAt))){\n        this.withinOwners(el, view => {\n          let phxEvent = el.getAttribute(phxClickAway)\n          if(JS.isVisible(el) && JS.isInViewport(el)){\n            JS.exec(e, \"click\", phxEvent, view, el, [\"push\", {data: this.eventMeta(\"click\", e, e.target)}])\n          }\n        })\n      }\n    })\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      DOM.dispatchEvent(window, \"phx:navigate\", {detail: {href, patch: type === \"patch\", pop: true}})\n      this.requestDOMUpdate(() => {\n        if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n          this.main.pushLinkPatch(event, href, null, () => {\n            this.maybeScroll(scroll)\n          })\n        } else {\n          this.replaceMain(href, null, () => {\n            if(root){ this.replaceRootHistory() }\n            this.maybeScroll(scroll)\n          })\n        }\n      })\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      if(!type || !this.isConnected() || !this.main || DOM.wantsNewTab(e)){ return }\n\n      // When wrapping an SVG element in an anchor tag, the href can be an SVGAnimatedString\n      let href = target.href instanceof SVGAnimatedString ? target.href.baseVal : target.href\n\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      e.stopImmediatePropagation() // do not bubble click to regular phx-click bindings\n      if(this.pendingLink === href){ return }\n\n      this.requestDOMUpdate(() => {\n        if(type === \"patch\"){\n          this.pushHistoryPatch(e, href, linkState, target)\n        } else if(type === \"redirect\"){\n          this.historyRedirect(e, href, linkState, null, target)\n        } else {\n          throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n        }\n        let phxClick = target.getAttribute(this.binding(\"click\"))\n        if(phxClick){\n          this.requestDOMUpdate(() => this.execJS(target, phxClick, \"click\"))\n        }\n      })\n    }, false)\n  }\n\n  maybeScroll(scroll){\n    if(typeof(scroll) === \"number\"){\n      requestAnimationFrame(() => {\n        window.scrollTo(0, scroll)\n      }) // the body needs to render before we scroll.\n    }\n  }\n\n  dispatchEvent(event, payload = {}){\n    DOM.dispatchEvent(window, `phx:${event}`, {detail: payload})\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => this.dispatchEvent(event, payload))\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: info})\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", {detail: info})\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(e, href, linkState, targetEl){\n    if(!this.isConnected() || !this.main.isMain()){ return Browser.redirect(href) }\n\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(e, href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    DOM.dispatchEvent(window, \"phx:navigate\", {detail: {patch: true, href, pop: false}})\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(e, href, linkState, flash, targetEl){\n    if(targetEl && e.isTrusted && e.type !== \"popstate\"){ targetEl.classList.add(\"phx-click-loading\") }\n    if(!this.isConnected() || !this.main.isMain()){ return Browser.redirect(href, flash) }\n\n    // convert to full href if only path prefix\n    if(/^\\/$|^\\/[^\\/]+.*$/.test(href)){\n      let {protocol, host} = window.location\n      href = `${protocol}//${host}${href}`\n    }\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, (linkRef) => {\n        if(linkRef === this.linkRef){\n          Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n          DOM.dispatchEvent(window, \"phx:navigate\", {detail: {href, patch: false, pop: false}})\n          this.registerNewLocation(window.location)\n        }\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    let externalFormSubmitted = false\n\n    // disable forms on submit that track phx-change but perform external submit\n    this.on(\"submit\", e => {\n      let phxSubmit = e.target.getAttribute(this.binding(\"submit\"))\n      let phxChange = e.target.getAttribute(this.binding(\"change\"))\n      if(!externalFormSubmitted && phxChange && !phxSubmit){\n        externalFormSubmitted = true\n        e.preventDefault()\n        this.withinOwners(e.target, view => {\n          view.disableForm(e.target)\n          // safari needs next tick\n          window.requestAnimationFrame(() => {\n            if(DOM.isUnloadableFormSubmit(e)){ this.unload() }\n            e.target.submit()\n          })\n        })\n      }\n    })\n\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){\n        if(DOM.isUnloadableFormSubmit(e)){ this.unload() }\n        return\n      }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, view => {\n        JS.exec(e, \"submit\", phxEvent, view, e.target, [\"push\", {submitter: e.submitter}])\n      })\n    })\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        if(e instanceof CustomEvent && e.target.form === undefined){\n          throw new Error(`dispatching a custom ${type} event is only supported on input elements inside a form`)\n        }\n        let phxChange = this.binding(\"change\")\n        let input = e.target\n        // do not fire phx-change if we are in the middle of a composition session\n        // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing\n        // Safari has issues if the input is updated while composing\n        // see https://github.com/phoenixframework/phoenix_live_view/issues/3322\n        if(e.isComposing){\n          const key = `composition-listener-${type}`\n          if(!DOM.private(input, key)){\n            DOM.putPrivate(input, key, true)\n            input.addEventListener(\"compositionend\", () => {\n              // trigger a new input/change event\n              input.dispatchEvent(new Event(type, {bubbles: true}))\n              DOM.deletePrivate(input, key)\n            }, {once: true})\n          }\n          return\n        }\n        let inputEvent = input.getAttribute(phxChange)\n        let formEvent = input.form && input.form.getAttribute(phxChange)\n        let phxEvent = inputEvent || formEvent\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n\n        let dispatcher = inputEvent ? input : input.form\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // Browsers should always fire at least one \"input\" event before every \"change\"\n        // Ignore \"change\" events, unless there was no prior \"input\" event.\n        // This could happen if user code triggers a \"change\" event, or if the browser is non-conforming.\n        if(at === currentIterations - 1 && type === \"change\" && lastType === \"input\"){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, type, () => {\n          this.withinOwners(dispatcher, view => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            JS.exec(e, \"change\", phxEvent, view, input, [\"push\", {_target: e.target.name, dispatcher: dispatcher}])\n          })\n        })\n      })\n    }\n    this.on(\"reset\", (e) => {\n      let form = e.target\n      DOM.resetForm(form)\n      let input = Array.from(form.elements).find(el => el.type === \"reset\")\n      if(input){\n        // wait until next tick to get updated input value\n        window.requestAnimationFrame(() => {\n          input.dispatchEvent(new Event(\"input\", {bubbles: true, cancelable: false}))\n        })\n      }\n    })\n  }\n\n  debounce(el, event, eventType, callback){\n    if(eventType === \"blur\" || eventType === \"focusout\"){ return callback() }\n\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n\n    this.withinOwners(el, view => {\n      let asyncFilter = () => !view.isDestroyed() && document.body.contains(el)\n      DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, () => {\n        callback()\n      })\n    })\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    this.boundEventNames.add(event)\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n\n  jsQuerySelectorAll(sourceEl, query, defaultQuery){\n    let all = this.domCallbacks.jsQuerySelectorAll\n    return all ? all(sourceEl, query, defaultQuery) : defaultQuery()\n  }\n}\n\nclass TransitionSet {\n  constructor(){\n    this.transitions = new Set()\n    this.pendingOps = []\n  }\n\n  reset(){\n    this.transitions.forEach(timer => {\n      clearTimeout(timer)\n      this.transitions.delete(timer)\n    })\n    this.flushPendingOps()\n  }\n\n  after(callback){\n    if(this.size() === 0){\n      callback()\n    } else {\n      this.pushPendingOp(callback)\n    }\n  }\n\n  addTransition(time, onStart, onDone){\n    onStart()\n    let timer = setTimeout(() => {\n      this.transitions.delete(timer)\n      onDone()\n      this.flushPendingOps()\n    }, time)\n    this.transitions.add(timer)\n  }\n\n  pushPendingOp(op){ this.pendingOps.push(op) }\n\n  size(){ return this.transitions.size }\n\n  flushPendingOps(){\n    if(this.size() > 0){ return }\n    let op = this.pendingOps.shift()\n    if(op){\n      op()\n      this.flushPendingOps()\n    }\n  }\n}\n", "/*\n================================================================================\nPhoenix LiveView JavaScript Client\n================================================================================\n\nSee the hexdocs at `https://hexdocs.pm/phoenix_live_view` for documentation.\n\n*/\n\nimport LiveSocket, {isUsedInput} from \"./live_socket\"\nimport DOM from \"./dom\"\nimport ViewHook from \"./view_hook\"\nimport View from \"./view\"\n\n/** Creates a ViewHook instance for the given element and callbacks.\n *\n * @param {HTMLElement} el - The element to associate with the hook.\n * @param {Object} [callbacks] - The list of hook callbacks, such as mounted,\n *   updated, destroyed, etc.\n *\n * @example\n *\n * class MyComponent extends HTMLElement {\n *   connectedCallback(){\n *     let onLiveViewMounted = () => this.hook.pushEvent(...))\n *     this.hook = createHook(this, {mounted: onLiveViewMounted})\n *   }\n * }\n *\n * *Note*: `createHook` must be called from the `connectedCallback` lifecycle\n * which is triggered after the element has been added to the DOM. If you try\n * to call `createHook` from the constructor, an error will be logged.\n *\n * @returns {ViewHook} Returns the ViewHook instance for the custom element.\n */\nlet createHook = (el, callbacks = {}) => {\n  let existingHook = DOM.getCustomElHook(el)\n  if(existingHook){ return existingHook }\n\n  let hook = new ViewHook(View.closestView(el), el, callbacks)\n  DOM.putCustomElHook(el, hook)\n  return hook\n}\n\nexport {\n  LiveSocket,\n  isUsedInput,\n  createHook\n}", "import { Socket } from \"phoenix\";\nimport { LiveSocket } from \"phoenix_live_view\";\n\nfunction easeInOutCubic(t) {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}\n\nfunction easeUpdate(element, src, dest, duration) {\n  const startTime = Date.now();\n\n  function update() {\n    const elapsedTime = Date.now() - startTime;\n    const progress = Math.min(elapsedTime / duration, 1);\n\n    value = easeInOutCubic(progress);\n    const diff = dest - src;\n    const current = src + diff * value;\n    element.innerText = current.toFixed(2);\n\n    if (progress < 1) {\n      requestAnimationFrame(update);\n    }\n  }\n\n  requestAnimationFrame(update);\n}\n\nlet Hooks = {};\nHooks.PidMemory = {\n  updated() {\n    const currentMemory = parseFloat(this.el.innerText);\n    const newMemory = parseFloat(this.el.dataset.newHeapSize);\n\n    easeUpdate(this.el, currentMemory, newMemory, 1000);\n  },\n};\n\nlet csrfToken = document\n  .querySelector(\"meta[name='csrf-token']\")\n  .getAttribute(\"content\");\nlet liveSocket = new LiveSocket(\"/live\", Socket, {\n  hooks: Hooks,\n  params: { _csrf_token: csrfToken },\n});\nliveSocket.connect();\n"],
  "mappings": "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",
  "names": ["closure", "value", "globalSelf", "phxWindow", "global", "DEFAULT_VSN", "SOCKET_STATES", "DEFAULT_TIMEOUT", "WS_CLOSE_NORMAL", "CHANNEL_STATES", "CHANNEL_EVENTS", "TRANSPORTS", "XHR_STATES", "Push", "channel", "event", "payload", "timeout", "status", "callback", "response", "_ref", "h", "Timer", "timerCalc", "Channel", "topic", "params", "socket", "pushEvent", "reason", "ref", "bind", "onClose", "leavePush", "_event", "joinRef", "handledPayload", "eventBindings", "i", "Ajax", "method", "endPoint", "accept", "body", "ontimeout", "req", "resp", "obj", "parentKey", "queryStr", "key", "paramKey", "paramVal", "url", "prefix", "arrayBufferToBase64", "buffer", "binary", "bytes", "len", "LongPoll", "code", "wasClean", "token", "messages", "msg", "opts", "contentType", "onCallerTimeout", "serializer_default", "msg", "callback", "payload", "rawPayload", "join_ref", "ref", "topic", "event", "message", "metaLength", "header", "view", "offset", "char", "combined", "buffer", "kind", "decoder", "joinRefSize", "topicSize", "eventSize", "joinRef", "data", "refSize", "CHANNEL_EVENTS", "Socket", "endPoint", "opts", "DEFAULT_TIMEOUT", "global", "LongPoll", "awaitingConnectionOnPageShow", "phxWindow", "_e", "tries", "closure", "TRANSPORTS", "DEFAULT_VSN", "Timer", "newTransport", "uri", "Ajax", "code", "reason", "params", "startTime", "onMsgRef", "error", "key", "val", "fallbackTransport", "fallbackThreshold", "established", "primaryTransport", "openRef", "errorRef", "fallback", "rtt", "WS_CLOSE_NORMAL", "SOCKET_STATES", "closeCode", "transportBefore", "establishedBefore", "channel", "c", "refs", "chanParams", "chan", "Channel", "result", "newRef", "rawMessage", "i", "dupChannel", "CONSECUTIVE_RELOADS", "MAX_RELOADS", "RELOAD_JITTER_MIN", "RELOAD_JITTER_MAX", "FAILSAFE_JITTER", "PHX_EVENT_CLASSES", "PHX_COMPONENT", "PHX_LIVE_LINK", "PHX_TRACK_STATIC", "PHX_LINK_STATE", "PHX_REF_LOADING", "PHX_REF_SRC", "PHX_REF_LOCK", "PHX_TRACK_UPLOADS", "PHX_UPLOAD_REF", "PHX_PREFLIGHTED_REFS", "PHX_DONE_REFS", "PHX_DROP_TARGET", "PHX_ACTIVE_ENTRY_REFS", "PHX_LIVE_FILE_UPDATED", "PHX_SKIP", "PHX_MAGIC_ID", "PHX_PRUNE", "PHX_CONNECTED_CLASS", "PHX_LOADING_CLASS", "PHX_ERROR_CLASS", "PHX_CLIENT_ERROR_CLASS", "PHX_SERVER_ERROR_CLASS", "PHX_PARENT_ID", "PHX_MAIN", "PHX_ROOT_ID", "PHX_VIEWPORT_TOP", "PHX_VIEWPORT_BOTTOM", "PHX_TRIGGER_ACTION", "PHX_HAS_FOCUSED", "FOCUSABLE_INPUTS", "CHECKABLE_INPUTS", "PHX_HAS_SUBMITTED", "PHX_SESSION", "PHX_VIEW_SELECTOR", "PHX_STICKY", "PHX_STATIC", "PHX_READONLY", "PHX_DISABLED", "PHX_DISABLE_WITH", "PHX_DISABLE_WITH_RESTORE", "PHX_HOOK", "PHX_DEBOUNCE", "PHX_THROTTLE", "PHX_UPDATE", "PHX_STREAM", "PHX_STREAM_REF", "PHX_KEY", "PHX_PRIVATE", "PHX_AUTO_RECOVER", "PHX_LV_DEBUG", "PHX_LV_PROFILE", "PHX_LV_LATENCY_SIM", "PHX_PROGRESS", "PHX_MOUNTED", "PHX_RELOAD_STATUS", "LOADER_TIMEOUT", "MAX_CHILD_JOIN_ATTEMPTS", "BEFORE_UNLOAD_LOADER_TIMEOUT", "BINDING_PREFIX", "PUSH_TIMEOUT", "DEBOUNCE_TRIGGER", "THROTTLED", "DEBOUNCE_PREV_KEY", "DEFAULTS", "PHX_PENDING_ATTRS", "DYNAMICS", "STATIC", "ROOT", "COMPONENTS", "EVENTS", "REPLY", "TITLE", "TEMPLATES", "STREAM", "EntryUploader", "entry", "chunkSize", "liveSocket", "reason", "_data", "reader", "blob", "e", "logError", "chunk", "msg", "obj", "isCid", "cid", "type", "detectDuplicateIds", "ids", "elems", "len", "debug", "view", "kind", "closure", "val", "clone", "closestPhxBinding", "el", "binding", "borderEl", "isObject", "isEqualObj", "obj1", "obj2", "isEmpty", "x", "maybe", "callback", "channelUploader", "entries", "onError", "resp", "Browser", "localStorage", "namespace", "subkey", "initial", "func", "current", "key", "newVal", "meta", "to", "currentState", "hashEl", "name", "value", "maxAgeSeconds", "expires", "toURL", "flash", "maybeHash", "hash", "browser_default", "ARIA", "instance", "classes", "interactiveOnly", "child", "aria_default", "focusStack", "default_transition_time", "JS", "eventType", "phxEvent", "sourceEl", "defaults", "defaultKind", "defaultArgs", "args", "rect", "windowHeight", "windowWidth", "attr", "dom_default", "node", "encodedJS", "event", "detail", "bubbles", "data", "target", "page_loading", "loading", "dispatcher", "pushOpts", "targetSrc", "phxTarget", "targetView", "targetCtx", "newCid", "_target", "submitter", "href", "replace", "names", "transition", "time", "blocking", "val1", "val2", "display", "ins", "outs", "inClasses", "inStartClasses", "inEndClasses", "outClasses", "outStartClasses", "outEndClasses", "onStart", "onEnd", "currentEl", "stickyDisplay", "prevAdds", "prevRemoves", "newAdds", "newRemoves", "adds", "removes", "transitionRun", "transitionStart", "transitionEnd", "onDone", "keepAdds", "keepRemoves", "sets", "prevSets", "alteredAttrs", "_val", "newSets", "defaultQuery", "toEl", "trans", "tStart", "tEnd", "js_default", "DOM", "id", "className", "query", "array", "html", "template", "inputEl", "formId", "inputsOutsideForm", "wantsNewTab", "isDownload", "isTargetBlank", "isTargetNamedTab", "currentLocation", "url", "parentId", "phxUpdate", "updateTypes", "cids", "parentCids", "childrenCids", "parent", "childCID", "childCid", "nodes", "defaultVal", "updateFunc", "existing", "fromEl", "source", "str", "titleEl", "prefix", "suffix", "phxDebounce", "defaultDebounce", "phxThrottle", "defaultThrottle", "asyncFilter", "debounce", "throttle", "timeout", "trigger", "currentCycle", "newKeyDown", "prevKey", "t", "form", "input", "cycle", "phxViewportTop", "phxViewportBottom", "hook", "parents", "opts", "defaultBubble", "eventOpts", "cloned", "exclude", "isIgnored", "sourceAttrs", "i", "sourceValue", "targetAttrs", "focused", "selectionStart", "selectionEnd", "phxTriggerExternal", "container", "toRemove", "childNode", "tagName", "attrs", "retainedAttrs", "newContainer", "op", "existingName", "_name", "_op", "stashedResult", "ops", "_", "existingIndex", "_stashed", "UploadEntry", "fileEl", "file", "isNew", "isActive", "LiveUploader", "autoUpload", "progress", "uploaders", "liveUploaderFileRef", "_LiveUploader", "ref", "formEl", "active", "files", "fileData", "uploadRef", "f", "dataTransfer", "newFiles", "fileInputs", "onComplete", "groupedEntries", "acc", "Hooks", "newPreflights", "findScrollContainer", "scrollTop", "scrollContainer", "bottom", "top", "isAtViewportTop", "isAtViewportBottom", "isWithinViewport", "scrollBefore", "topOverran", "throttleInterval", "pendingOp", "onTopOverrun", "topEvent", "firstChild", "onFirstChildAtTop", "onLastChildAtBottom", "bottomEvent", "lastChild", "_e", "scrollNow", "isScrollingUp", "isScrollingDown", "interval", "lastCallAt", "timer", "now", "remainingTime", "hooks_default", "ElementRef", "eachCloneCallback", "clonedTree", "disabledVal", "readOnlyVal", "disableRestore", "DOMPostMorphRestorer", "containerBefore", "containerAfter", "updateType", "idsBefore", "idsAfter", "elementsToModify", "previousElementId", "elementToModify", "previousElem", "elem", "elemId", "DOCUMENT_FRAGMENT_NODE", "morphAttrs", "fromNode", "toNode", "toNodeAttrs", "attrName", "attrNamespaceURI", "attrValue", "fromValue", "fromNodeAttrs", "d", "range", "NS_XHTML", "doc", "HAS_TEMPLATE_SUPPORT", "HAS_RANGE_SUPPORT", "createFragmentFromTemplate", "createFragmentFromRange", "fragment", "createFragmentFromWrap", "toElement", "compareNodeNames", "fromNodeName", "toNodeName", "fromCodeStart", "toCodeStart", "createElementNS", "namespaceURI", "moveChildren", "curChild", "nextChild", "syncBooleanAttrProp", "specialElHandlers", "parentNode", "parentName", "newValue", "oldValue", "selectedIndex", "optgroup", "nodeName", "ELEMENT_NODE", "DOCUMENT_FRAGMENT_NODE$1", "TEXT_NODE", "COMMENT_NODE", "noop", "defaultGetNodeKey", "morphdomFactory", "options", "toNodeHtml", "getNodeKey", "onBeforeNodeAdded", "onNodeAdded", "onBeforeElUpdated", "onElUpdated", "onBeforeNodeDiscarded", "onNodeDiscarded", "onBeforeElChildrenUpdated", "skipFromChildren", "addChild", "childrenOnly", "fromNodesLookup", "keyedRemovalList", "addKeyedRemoval", "walkDiscardedChildNodes", "skipKeyedNodes", "removeNode", "indexTree", "handleNodeAdded", "nextSibling", "unmatchedFromEl", "morphEl", "cleanupFromEl", "curFromNodeChild", "curFromNodeKey", "fromNextSibling", "toElKey", "beforeUpdateResult", "morphChildren", "skipFrom", "curToNodeChild", "curToNodeKey", "toNextSibling", "matchingFromEl", "outer", "curFromNodeType", "isCompatible", "onBeforeNodeAddedResult", "specialElHandler", "morphedNode", "morphedNodeType", "toNodeType", "elToRemove", "morphdom", "morphdom_esm_default", "DOMPatch", "activeElement", "streams", "targetCID", "isJoinPatch", "targetContainer", "added", "updates", "appendPrependUpdates", "externalFormTriggered", "morph", "withChildren", "morphCallbacks", "from", "streamAt", "nonStreamChild", "c", "sibling", "morphedEl", "fromVal", "toVal", "isFocusedFormEl", "focusedSelectChanged", "prevSession", "inserts", "deleteIds", "reset", "limit", "update", "children", "oldIndex", "pendingRemoves", "first", "rest", "VOID_TAGS", "quoteChars", "modifyRoot", "clearInnerHTML", "insideComment", "beforeTag", "afterTag", "tag", "tagNameEndsAt", "newHTML", "lookahead", "isId", "char", "attrStartsAt", "closeAt", "attrsStr", "idAttrStr", "Rendered", "diff", "reply", "events", "title", "viewId", "rendered", "onlyCids", "components", "changeTracking", "rootAttrs", "output", "newc", "cache", "oldc", "cdiff", "ndiff", "stat", "scid", "tdiff", "targetVal", "pruneMagicId", "merged", "strippedHTML", "_before", "_after", "part", "templates", "statics", "isRoot", "prevBuffer", "skip", "newRoot", "commentBefore", "commentAfter", "dynamics", "stream", "_ref", "_inserts", "compTemplates", "dynamic", "component", "HOOK_ID", "viewHookID", "ViewHook", "callbacks", "owner", "payload", "onReply", "callbackRef", "customEvent", "bypass", "prependFormDataKey", "isArray", "baseKey", "serializeForm", "metadata", "onlyNames", "injectedElement", "formData", "_index", "params", "elements", "inputs", "isUnused", "hidden", "metaKey", "View", "_View", "liveViewEl", "parentView", "liveReferer", "manifest", "onFinished", "msgCallback", "dom", "viewEl", "targets", "rawDiff", "liveview_version", "live_patch", "phxStatic", "hookEl", "patch", "phxMounted", "hasBeenInvoked", "newHook", "pruneCids", "removedEls", "phxChildrenAdded", "updatedHookIds", "els", "destroyedCIDs", "hooks", "phxChange", "oldForms", "rootEl", "formsToRecover", "newForm", "oldForm", "childId", "_child", "parentCID", "hookElId", "hookName", "cb", "redir", "reloadToken", "error", "trueChildEl", "callerPush", "receives", "latency", "withLatency", "refGenerator", "oldJoinCount", "onLoadingDone", "resolve", "reject", "finish", "hookReply", "onlyEls", "selector", "newRef", "disableWith", "loadingEls", "lock", "lockCompletePromise", "loadingCompletePromise", "disableText", "lockEl", "cidOrSelector", "_resp", "entryRef", "forceCid", "uploads", "_els", "_uploads", "awaitingSubmit", "_el", "_opts", "_callback", "filterIgnored", "filterDisables", "filterButton", "filterInput", "formElements", "disables", "buttons", "button", "formEls", "push", "proxyRefGen", "joinCountAtUpload", "inputEls", "numFileInputsInProgress", "uploader", "entry_ref", "filesOrBlobs", "targetElement", "templateDom", "pending", "targetEl", "linkRef", "refGen", "fallback", "_error", "_timeout", "willDestroyCIDs", "completelyDestroyCIDs", "parentViewEl", "LiveSocket", "url", "phxSocket", "opts", "BINDING_PREFIX", "closure", "clone", "DEFAULTS", "LOADER_TIMEOUT", "MAX_RELOADS", "RELOAD_JITTER_MIN", "RELOAD_JITTER_MAX", "FAILSAFE_JITTER", "TransitionSet", "_e", "PHX_LV_PROFILE", "PHX_LV_DEBUG", "upperBoundMs", "PHX_LV_LATENCY_SIM", "str", "doConnect", "callback", "transport", "el", "encodedJS", "eventType", "e", "view", "js_default", "phxEvent", "data", "kind", "args", "name", "func", "result", "msgCallback", "msg", "obj", "debug", "time", "onStart", "onDone", "channel", "event", "cb", "latency", "log", "minMs", "maxMs", "afterMs", "tries", "browser_default", "CONSECUTIVE_RELOADS", "count", "hooks_default", "topic", "params", "body", "rootsFound", "dom_default", "PHX_VIEW_SELECTOR", "PHX_PARENT_ID", "rootEl", "PHX_MAIN", "to", "flash", "reloadToken", "PHX_RELOAD_STATUS", "href", "linkRef", "liveReferer", "removeEls", "newMainEl", "joinCount", "elements", "skipSticky", "removeAttr", "stickies", "silenceEvents", "PHX_SESSION", "View", "childEl", "maybe", "rootId", "PHX_ROOT_ID", "root", "id", "dead", "type", "targetEl", "phxTarget", "matchKey", "PHX_KEY", "pressedKey", "dropTargetId", "closestPhxBinding", "PHX_DROP_TARGET", "trueTarget", "dropTarget", "files", "LiveUploader", "PHX_TRACK_UPLOADS", "uploadTarget", "f", "eventName", "events", "browserEventName", "binding", "windowBinding", "targetPhxEvent", "bindingName", "click", "target", "clickStartedAtTarget", "PHX_REF_SRC", "clickStartedAt", "phxClickAway", "scrollTimer", "state", "scroll", "PHX_LIVE_LINK", "linkState", "PHX_LINK_STATE", "phxClick", "payload", "info", "done", "protocol", "host", "newLocation", "pathname", "search", "iterations", "externalFormSubmitted", "phxSubmit", "phxChange", "input", "key", "inputEvent", "formEvent", "dispatcher", "currentIterations", "at", "lastType", "PHX_HAS_FOCUSED", "form", "phxDebounce", "PHX_DEBOUNCE", "phxThrottle", "PHX_THROTTLE", "defaultDebounce", "defaultThrottle", "asyncFilter", "sourceEl", "query", "defaultQuery", "all", "timer", "op", "easeInOutCubic", "easeUpdate", "element", "src", "dest", "duration", "startTime", "update", "elapsedTime", "progress", "diff", "current", "Hooks", "currentMemory", "newMemory", "csrfToken", "liveSocket", "LiveSocket", "Socket"]
}
